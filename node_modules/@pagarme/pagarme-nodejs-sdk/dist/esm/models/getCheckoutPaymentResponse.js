/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
import { array, boolean, lazy, nullable, number, object, optional, string, } from '../schema';
import { getAddressResponseSchema, } from './getAddressResponse';
import { getCheckoutBankTransferPaymentResponseSchema, } from './getCheckoutBankTransferPaymentResponse';
import { getCheckoutBoletoPaymentResponseSchema, } from './getCheckoutBoletoPaymentResponse';
import { getCheckoutCreditCardPaymentResponseSchema, } from './getCheckoutCreditCardPaymentResponse';
import { getCheckoutDebitCardPaymentResponseSchema, } from './getCheckoutDebitCardPaymentResponse';
import { getCheckoutPixPaymentResponseSchema, } from './getCheckoutPixPaymentResponse';
import { getCustomerResponseSchema, } from './getCustomerResponse';
import { getShippingResponseSchema, } from './getShippingResponse';
export const getCheckoutPaymentResponseSchema = object({
    id: ['id', optional(nullable(string()))],
    amount: ['amount', optional(nullable(number()))],
    defaultPaymentMethod: [
        'default_payment_method',
        optional(nullable(string())),
    ],
    successUrl: ['success_url', optional(nullable(string()))],
    paymentUrl: ['payment_url', optional(nullable(string()))],
    gatewayAffiliationId: [
        'gateway_affiliation_id',
        optional(nullable(string())),
    ],
    acceptedPaymentMethods: [
        'accepted_payment_methods',
        optional(nullable(array(string()))),
    ],
    status: ['status', optional(nullable(string()))],
    skipCheckoutSuccessPage: [
        'skip_checkout_success_page',
        optional(nullable(boolean())),
    ],
    createdAt: ['created_at', optional(nullable(string()))],
    updatedAt: ['updated_at', optional(nullable(string()))],
    canceledAt: ['canceled_at', optional(nullable(string()))],
    customerEditable: ['customer_editable', optional(nullable(boolean()))],
    customer: [
        'customer',
        optional(nullable(lazy(() => getCustomerResponseSchema))),
    ],
    billingaddress: [
        'billingaddress',
        optional(nullable(lazy(() => getAddressResponseSchema))),
    ],
    creditCard: [
        'credit_card',
        optional(nullable(lazy(() => getCheckoutCreditCardPaymentResponseSchema))),
    ],
    boleto: [
        'boleto',
        optional(nullable(lazy(() => getCheckoutBoletoPaymentResponseSchema))),
    ],
    billingAddressEditable: [
        'billing_address_editable',
        optional(nullable(boolean())),
    ],
    shipping: [
        'shipping',
        optional(nullable(lazy(() => getShippingResponseSchema))),
    ],
    shippable: ['shippable', optional(nullable(boolean()))],
    closedAt: ['closed_at', optional(nullable(string()))],
    expiresAt: ['expires_at', optional(nullable(string()))],
    currency: ['currency', optional(nullable(string()))],
    debitCard: [
        'debit_card',
        optional(nullable(lazy(() => getCheckoutDebitCardPaymentResponseSchema))),
    ],
    bankTransfer: [
        'bank_transfer',
        optional(nullable(lazy(() => getCheckoutBankTransferPaymentResponseSchema))),
    ],
    acceptedBrands: ['accepted_brands', optional(nullable(array(string())))],
    pix: [
        'pix',
        optional(nullable(lazy(() => getCheckoutPixPaymentResponseSchema))),
    ],
});
//# sourceMappingURL=getCheckoutPaymentResponse.js.map