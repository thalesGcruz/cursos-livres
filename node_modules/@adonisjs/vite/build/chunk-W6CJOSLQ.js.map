{"version":3,"sources":["../src/vite.ts"],"sourcesContent":["/*\n * @adonisjs/vite\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { join } from 'node:path'\nimport { readFileSync } from 'node:fs'\nimport { slash } from '@poppinss/utils'\nimport type { ViteRuntime } from 'vite/runtime'\nimport type {\n  InlineConfig,\n  MainThreadRuntimeOptions,\n  Manifest,\n  ModuleNode,\n  ViteDevServer,\n} from 'vite'\n\nimport { makeAttributes, uniqBy } from './utils.js'\nimport type { AdonisViteElement, SetAttributes, ViteOptions } from './types.js'\n\nconst styleFileRegex = /\\.(css|less|sass|scss|styl|stylus|pcss|postcss)($|\\?)/\n\n/**\n * Vite class exposes the APIs to generate tags and URLs for\n * assets processed using vite.\n */\nexport class Vite {\n  /**\n   * We cache the manifest file content in production\n   * to avoid reading the file multiple times\n   */\n  #manifestCache?: Manifest\n  #options: ViteOptions\n  #devServer?: ViteDevServer\n  #createServerPromise?: Promise<ViteDevServer>\n\n  constructor(\n    protected isViteRunning: boolean,\n    options: ViteOptions\n  ) {\n    this.#options = options\n    this.#options.assetsUrl = (this.#options.assetsUrl || '/').replace(/\\/$/, '')\n  }\n\n  /**\n   * Reads the file contents as JSON\n   */\n  #readFileAsJSON(filePath: string) {\n    return JSON.parse(readFileSync(filePath, 'utf-8'))\n  }\n\n  /**\n   * Generates a JSON element with a custom toString implementation\n   */\n  #generateElement(element: AdonisViteElement) {\n    return {\n      ...element,\n      toString() {\n        const attributes = `${makeAttributes(element.attributes)}`\n        if (element.tag === 'link') {\n          return `<${element.tag} ${attributes}/>`\n        }\n\n        return `<${element.tag} ${attributes}>${element.children.join('\\n')}</${element.tag}>`\n      },\n    }\n  }\n\n  /**\n   * Returns the script needed for the HMR working with Vite\n   */\n  #getViteHmrScript(attributes?: Record<string, any>) {\n    return this.#generateElement({\n      tag: 'script',\n      attributes: {\n        type: 'module',\n        src: '/@vite/client',\n        ...attributes,\n      },\n      children: [],\n    })\n  }\n\n  /**\n   * Check if the given path is a CSS path\n   */\n  #isCssPath(path: string) {\n    return path.match(styleFileRegex) !== null\n  }\n\n  /**\n   * If the module is a style module\n   */\n  #isStyleModule(mod: ModuleNode) {\n    if (this.#isCssPath(mod.url) || (mod.id && /\\?vue&type=style/.test(mod.id))) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Unwrap attributes from the user defined function or return\n   * the attributes as it is\n   */\n  #unwrapAttributes(src: string, url: string, attributes?: SetAttributes) {\n    if (typeof attributes === 'function') {\n      return attributes({ src, url })\n    }\n\n    return attributes\n  }\n\n  /**\n   * Create a style tag for the given path\n   */\n  #makeStyleTag(src: string, url: string, attributes?: Record<string, any>): AdonisViteElement {\n    const customAttributes = this.#unwrapAttributes(src, url, this.#options?.styleAttributes)\n    return this.#generateElement({\n      tag: 'link',\n      attributes: { rel: 'stylesheet', ...customAttributes, ...attributes, href: url },\n    })\n  }\n\n  /**\n   * Create a script tag for the given path\n   */\n  #makeScriptTag(src: string, url: string, attributes?: Record<string, any>): AdonisViteElement {\n    const customAttributes = this.#unwrapAttributes(src, url, this.#options?.scriptAttributes)\n    return this.#generateElement({\n      tag: 'script',\n      attributes: { type: 'module', ...customAttributes, ...attributes, src: url },\n      children: [],\n    })\n  }\n\n  /**\n   * Generate an asset URL for a given asset path\n   */\n  #generateAssetUrl(path: string): string {\n    return `${this.#options.assetsUrl}/${path}`\n  }\n\n  /**\n   * Generate a HTML tag for the given asset\n   */\n  #generateTag(asset: string, attributes?: Record<string, any>): AdonisViteElement {\n    let url = ''\n    if (this.isViteRunning) {\n      url = `/${asset}`\n    } else {\n      url = this.#generateAssetUrl(asset)\n    }\n\n    if (this.#isCssPath(asset)) {\n      return this.#makeStyleTag(asset, url, attributes)\n    }\n\n    return this.#makeScriptTag(asset, url, attributes)\n  }\n\n  /**\n   * Collect CSS files from the module graph recursively\n   */\n  #collectCss(\n    mod: ModuleNode,\n    styleUrls: Set<string>,\n    visitedModules: Set<string>,\n    importer?: ModuleNode\n  ): void {\n    if (!mod.url) return\n\n    /**\n     * Prevent visiting the same module twice\n     */\n    if (visitedModules.has(mod.url)) return\n    visitedModules.add(mod.url)\n\n    if (this.#isStyleModule(mod) && (!importer || !this.#isStyleModule(importer))) {\n      if (mod.url.startsWith('/')) {\n        styleUrls.add(mod.url)\n      } else if (mod.url.startsWith('\\0')) {\n        // virtual modules are prefixed with \\0\n        styleUrls.add(`/@id/__x00__${mod.url.substring(1)}`)\n      } else {\n        styleUrls.add(`/@id/${mod.url}`)\n      }\n    }\n\n    mod.importedModules.forEach((dep) => this.#collectCss(dep, styleUrls, visitedModules, mod))\n  }\n\n  /**\n   * Generate style and script tags for the given entrypoints\n   * Also adds the @vite/client script\n   */\n  async #generateEntryPointsTagsForDevMode(\n    entryPoints: string[],\n    attributes?: Record<string, any>\n  ): Promise<AdonisViteElement[]> {\n    const server = this.getDevServer()!\n\n    const tags = entryPoints.map((entrypoint) => this.#generateTag(entrypoint, attributes))\n    const jsEntrypoints = entryPoints.filter((entrypoint) => !this.#isCssPath(entrypoint))\n\n    /**\n     * If the module graph is empty, that means we didn't execute the entrypoint\n     * yet : we just started the AdonisJS dev server.\n     * So let's execute the entrypoints to populate the module graph\n     */\n    if (server?.moduleGraph.idToModuleMap.size === 0) {\n      await Promise.allSettled(\n        jsEntrypoints.map((entrypoint) => server.warmupRequest(`/${entrypoint}`))\n      )\n    }\n\n    /**\n     * We need to collect the CSS files imported by the entrypoints\n     * Otherwise, we gonna have a FOUC each time we full reload the page\n     */\n    const preloadUrls = new Set<string>()\n    const visitedModules = new Set<string>()\n    const cssTagsElement = new Set<AdonisViteElement>()\n\n    /**\n     * Let's search for the CSS files by browsing the module graph\n     * generated by Vite.\n     */\n    for (const entryPoint of jsEntrypoints) {\n      const filePath = join(server.config.root, entryPoint)\n      const entryMod = server.moduleGraph.getModuleById(slash(filePath))\n      if (entryMod) this.#collectCss(entryMod, preloadUrls, visitedModules)\n    }\n\n    /**\n     * Once we have the CSS files, generate associated tags\n     * that will be injected into the HTML\n     */\n    const elements = Array.from(preloadUrls).map((href) =>\n      this.#generateElement({\n        tag: 'link',\n        attributes: { rel: 'stylesheet', as: 'style', href: href },\n      })\n    )\n    elements.forEach((element) => cssTagsElement.add(element))\n\n    const viteHmr = this.#getViteHmrScript(attributes)\n    const result = [...cssTagsElement, viteHmr].concat(tags)\n\n    return result.sort((tag) => (tag.tag === 'link' ? -1 : 1))\n  }\n\n  /**\n   * Get a chunk from the manifest file for a given file name\n   */\n  #chunk(manifest: Manifest, entrypoint: string) {\n    const chunk = manifest[entrypoint]\n\n    if (!chunk) {\n      throw new Error(`Cannot find \"${entrypoint}\" chunk in the manifest file`)\n    }\n\n    return chunk\n  }\n\n  /**\n   * Get a list of chunks for a given filename\n   */\n  #chunksByFile(manifest: Manifest, file: string) {\n    return Object.entries(manifest)\n      .filter(([, chunk]) => chunk.file === file)\n      .map(([_, chunk]) => chunk)\n  }\n\n  /**\n   * Generate preload tag for a given url\n   */\n  #makePreloadTagForUrl(url: string) {\n    const attributes = this.#isCssPath(url)\n      ? { rel: 'preload', as: 'style', href: url }\n      : { rel: 'modulepreload', href: url }\n\n    return this.#generateElement({ tag: 'link', attributes })\n  }\n\n  /**\n   * Generate style and script tags for the given entrypoints\n   * using the manifest file\n   */\n  #generateEntryPointsTagsWithManifest(\n    entryPoints: string[],\n    attributes?: Record<string, any>\n  ): AdonisViteElement[] {\n    const manifest = this.manifest()\n    const tags: { path: string; tag: AdonisViteElement }[] = []\n    const preloads: Array<{ path: string }> = []\n\n    for (const entryPoint of entryPoints) {\n      /**\n       * 1. We generate tags + modulepreload for the entrypoint\n       */\n      const chunk = this.#chunk(manifest, entryPoint)\n      preloads.push({ path: this.#generateAssetUrl(chunk.file) })\n      tags.push({\n        path: chunk.file,\n        tag: this.#generateTag(chunk.file, { ...attributes, integrity: chunk.integrity }),\n      })\n\n      /**\n       * 2. We go through the CSS files that are imported by the entrypoint\n       * and generate tags + preload for them\n       */\n      for (const css of chunk.css || []) {\n        preloads.push({ path: this.#generateAssetUrl(css) })\n        tags.push({ path: css, tag: this.#generateTag(css) })\n      }\n\n      /**\n       * 3. We go through every import of the entrypoint and generate preload\n       */\n      for (const importNode of chunk.imports || []) {\n        preloads.push({ path: this.#generateAssetUrl(manifest[importNode].file) })\n\n        /**\n         * 4. Finally, we generate tags + preload for the CSS files imported by the import\n         * of the entrypoint\n         */\n        for (const css of manifest[importNode].css || []) {\n          const subChunk = this.#chunksByFile(manifest, css)\n\n          preloads.push({ path: this.#generateAssetUrl(css) })\n          tags.push({\n            path: this.#generateAssetUrl(css),\n            tag: this.#generateTag(css, {\n              ...attributes,\n              integrity: subChunk[0]?.integrity,\n            }),\n          })\n        }\n      }\n    }\n\n    /**\n     * We sort the preload to ensure that CSS files are preloaded first\n     */\n    const preloadsElements = uniqBy(preloads, 'path')\n      .sort((preload) => (this.#isCssPath(preload.path) ? -1 : 1))\n      .map((preload) => this.#makePreloadTagForUrl(preload.path))\n\n    /**\n     * And finally, we return the preloads + script and link tags\n     */\n    return preloadsElements.concat(tags.map(({ tag }) => tag))\n  }\n\n  /**\n   * Generate tags for the entry points\n   */\n  async generateEntryPointsTags(\n    entryPoints: string[] | string,\n    attributes?: Record<string, any>\n  ): Promise<AdonisViteElement[]> {\n    entryPoints = Array.isArray(entryPoints) ? entryPoints : [entryPoints]\n\n    if (this.isViteRunning) {\n      return this.#generateEntryPointsTagsForDevMode(entryPoints, attributes)\n    }\n\n    return this.#generateEntryPointsTagsWithManifest(entryPoints, attributes)\n  }\n\n  /**\n   * Returns the explicitly configured assetsUrl\n   */\n  assetsUrl() {\n    return this.#options.assetsUrl\n  }\n\n  /**\n   * Returns path to a given asset file using the manifest file\n   */\n  assetPath(asset: string): string {\n    if (this.isViteRunning) {\n      return `/${asset}`\n    }\n\n    const chunk = this.#chunk(this.manifest(), asset)\n    return this.#generateAssetUrl(chunk.file)\n  }\n\n  /**\n   * Returns the manifest file contents\n   *\n   * @throws Will throw an exception when running in dev\n   */\n  manifest(): Manifest {\n    if (this.isViteRunning) {\n      throw new Error('Cannot read the manifest file when running in dev mode')\n    }\n\n    if (!this.#manifestCache) {\n      this.#manifestCache = this.#readFileAsJSON(this.#options.manifestFile)\n    }\n\n    return this.#manifestCache!\n  }\n\n  /**\n   * Create the Vite Dev Server and runtime\n   *\n   * We lazy load the APIs to avoid loading it in production\n   * since we don't need it\n   */\n  async createDevServer(options?: InlineConfig) {\n    const { createServer } = await import('vite')\n\n    /**\n     * We do not await the server creation since it will\n     * slow down the boot process of AdonisJS\n     */\n    this.#createServerPromise = createServer({\n      server: { middlewareMode: true },\n      appType: 'custom',\n      ...options,\n    })\n\n    this.#devServer = await this.#createServerPromise\n  }\n\n  /**\n   * Create a runtime instance\n   * Will not be available when running in production since\n   * it needs the Vite Dev server\n   */\n  async createRuntime(options: MainThreadRuntimeOptions = {}): Promise<ViteRuntime> {\n    const { createViteRuntime } = await import('vite')\n\n    return createViteRuntime(this.#devServer!, options)\n  }\n\n  /**\n   * Stop the Vite Dev server\n   */\n  async stopDevServer() {\n    await this.#createServerPromise\n    await this.#devServer?.close()\n  }\n\n  /**\n   * Get the Vite Dev server instance\n   * Will not be available when running in production\n   */\n  getDevServer() {\n    return this.#devServer\n  }\n\n  /**\n   * Returns the script needed for the HMR working with React\n   */\n  getReactHmrScript(attributes?: Record<string, any>): AdonisViteElement | null {\n    if (!this.isViteRunning) {\n      return null\n    }\n\n    return this.#generateElement({\n      tag: 'script',\n      attributes: {\n        type: 'module',\n        ...attributes,\n      },\n      children: [\n        '',\n        `import RefreshRuntime from '/@react-refresh'`,\n        `RefreshRuntime.injectIntoGlobalHook(window)`,\n        `window.$RefreshReg$ = () => {}`,\n        `window.$RefreshSig$ = () => (type) => type`,\n        `window.__vite_plugin_react_preamble_installed__ = true`,\n        '',\n      ],\n    })\n  }\n}\n"],"mappings":"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","names":[]}