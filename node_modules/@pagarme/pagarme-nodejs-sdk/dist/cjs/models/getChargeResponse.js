"use strict";
/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
exports.__esModule = true;
exports.getChargeResponseSchema = void 0;
var discriminatedSchemas_1 = require("../models/discriminatedSchemas");
var schema_1 = require("../schema");
var getCustomerResponse_1 = require("./getCustomerResponse");
var getInvoiceResponse_1 = require("./getInvoiceResponse");
var getOrderResponse_1 = require("./getOrderResponse");
var getPaymentOriginResponse_1 = require("./getPaymentOriginResponse");
exports.getChargeResponseSchema = (0, schema_1.object)({
    id: ['id', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    code: ['code', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    gatewayId: ['gateway_id', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    amount: ['amount', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
    status: ['status', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    currency: ['currency', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    paymentMethod: ['payment_method', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    dueAt: ['due_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    createdAt: ['created_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    updatedAt: ['updated_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    lastTransaction: [
        'last_transaction',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return discriminatedSchemas_1.discriminatedGetTransactionResponseSchema; }))),
    ],
    invoice: [
        'invoice',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getInvoiceResponse_1.getInvoiceResponseSchema; }))),
    ],
    order: ['order', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getOrderResponse_1.getOrderResponseSchema; })))],
    customer: [
        'customer',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getCustomerResponse_1.getCustomerResponseSchema; }))),
    ],
    metadata: ['metadata', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.dict)((0, schema_1.string)())))],
    paidAt: ['paid_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    canceledAt: ['canceled_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    canceledAmount: ['canceled_amount', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
    paidAmount: ['paid_amount', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
    interestAndFinePaid: ['interest_and_fine_paid', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
    recurrencyCycle: ['recurrency_cycle', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    paymentOrigin: [
        'payment_origin',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getPaymentOriginResponse_1.getPaymentOriginResponseSchema; }))),
    ]
});
//# sourceMappingURL=getChargeResponse.js.map