"use strict";
/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
exports.__esModule = true;
exports.createCheckoutPaymentRequestSchema = void 0;
var schema_1 = require("../schema");
var createAddressRequest_1 = require("./createAddressRequest");
var createCheckoutBankTransferRequest_1 = require("./createCheckoutBankTransferRequest");
var createCheckoutBoletoPaymentRequest_1 = require("./createCheckoutBoletoPaymentRequest");
var createCheckoutCreditCardPaymentRequest_1 = require("./createCheckoutCreditCardPaymentRequest");
var createCheckoutDebitCardPaymentRequest_1 = require("./createCheckoutDebitCardPaymentRequest");
var createCheckoutPixPaymentRequest_1 = require("./createCheckoutPixPaymentRequest");
exports.createCheckoutPaymentRequestSchema = (0, schema_1.object)({
    acceptedPaymentMethods: ['accepted_payment_methods', (0, schema_1.array)((0, schema_1.string)())],
    acceptedMultiPaymentMethods: [
        'accepted_multi_payment_methods',
        (0, schema_1.array)((0, schema_1.unknown)()),
    ],
    successUrl: ['success_url', (0, schema_1.string)()],
    defaultPaymentMethod: ['default_payment_method', (0, schema_1.optional)((0, schema_1.string)())],
    gatewayAffiliationId: ['gateway_affiliation_id', (0, schema_1.optional)((0, schema_1.string)())],
    creditCard: [
        'credit_card',
        (0, schema_1.optional)((0, schema_1.lazy)(function () { return createCheckoutCreditCardPaymentRequest_1.createCheckoutCreditCardPaymentRequestSchema; })),
    ],
    debitCard: [
        'debit_card',
        (0, schema_1.optional)((0, schema_1.lazy)(function () { return createCheckoutDebitCardPaymentRequest_1.createCheckoutDebitCardPaymentRequestSchema; })),
    ],
    boleto: [
        'boleto',
        (0, schema_1.optional)((0, schema_1.lazy)(function () { return createCheckoutBoletoPaymentRequest_1.createCheckoutBoletoPaymentRequestSchema; })),
    ],
    customerEditable: ['customer_editable', (0, schema_1.optional)((0, schema_1.boolean)())],
    expiresIn: ['expires_in', (0, schema_1.optional)((0, schema_1.number)())],
    skipCheckoutSuccessPage: ['skip_checkout_success_page', (0, schema_1.boolean)()],
    billingAddressEditable: ['billing_address_editable', (0, schema_1.boolean)()],
    billingAddress: ['billing_address', (0, schema_1.lazy)(function () { return createAddressRequest_1.createAddressRequestSchema; })],
    bankTransfer: [
        'bank_transfer',
        (0, schema_1.optional)((0, schema_1.lazy)(function () { return createCheckoutBankTransferRequest_1.createCheckoutBankTransferRequestSchema; })),
    ],
    acceptedBrands: ['accepted_brands', (0, schema_1.array)((0, schema_1.string)())],
    pix: ['pix', (0, schema_1.optional)((0, schema_1.lazy)(function () { return createCheckoutPixPaymentRequest_1.createCheckoutPixPaymentRequestSchema; }))]
});
//# sourceMappingURL=createCheckoutPaymentRequest.js.map