/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
import { ApiResponse, RequestOptions } from '../core';
import { CreateOrderItemRequest } from '../models/createOrderItemRequest';
import { CreateOrderRequest } from '../models/createOrderRequest';
import { GetOrderItemResponse } from '../models/getOrderItemResponse';
import { GetOrderResponse } from '../models/getOrderResponse';
import { ListOrderResponse } from '../models/listOrderResponse';
import { UpdateMetadataRequest } from '../models/updateMetadataRequest';
import { UpdateOrderItemRequest } from '../models/updateOrderItemRequest';
import { UpdateOrderStatusRequest } from '../models/updateOrderStatusRequest';
import { BaseController } from './baseController';
export declare class OrdersController extends BaseController {
    /**
     * Gets all orders
     *
     * @param page          Page number
     * @param size          Page size
     * @param code          Filter for order's code
     * @param status        Filter for order's status
     * @param createdSince  Filter for order's creation date start range
     * @param createdUntil  Filter for order's creation date end range
     * @param customerId    Filter for order's customer id
     * @return Response from the API call
     */
    getOrders(page?: number, size?: number, code?: string, status?: string, createdSince?: string, createdUntil?: string, customerId?: string, requestOptions?: RequestOptions): Promise<ApiResponse<ListOrderResponse>>;
    /**
     * @param orderId         Order Id
     * @param itemId          Item Id
     * @param request         Item Model
     * @param idempotencyKey
     * @return Response from the API call
     */
    updateOrderItem(orderId: string, itemId: string, request: UpdateOrderItemRequest, idempotencyKey?: string, requestOptions?: RequestOptions): Promise<ApiResponse<GetOrderItemResponse>>;
    /**
     * @param orderId         Order Id
     * @param idempotencyKey
     * @return Response from the API call
     */
    deleteAllOrderItems(orderId: string, idempotencyKey?: string, requestOptions?: RequestOptions): Promise<ApiResponse<GetOrderResponse>>;
    /**
     * @param orderId         Order Id
     * @param itemId          Item Id
     * @param idempotencyKey
     * @return Response from the API call
     */
    deleteOrderItem(orderId: string, itemId: string, idempotencyKey?: string, requestOptions?: RequestOptions): Promise<ApiResponse<GetOrderItemResponse>>;
    /**
     * @param id              Order Id
     * @param request         Update Order Model
     * @param idempotencyKey
     * @return Response from the API call
     */
    closeOrder(id: string, request: UpdateOrderStatusRequest, idempotencyKey?: string, requestOptions?: RequestOptions): Promise<ApiResponse<GetOrderResponse>>;
    /**
     * Creates a new Order
     *
     * @param body            Request for creating an order
     * @param idempotencyKey
     * @return Response from the API call
     */
    createOrder(body: CreateOrderRequest, idempotencyKey?: string, requestOptions?: RequestOptions): Promise<ApiResponse<GetOrderResponse>>;
    /**
     * @param orderId         Order Id
     * @param request         Order Item Model
     * @param idempotencyKey
     * @return Response from the API call
     */
    createOrderItem(orderId: string, request: CreateOrderItemRequest, idempotencyKey?: string, requestOptions?: RequestOptions): Promise<ApiResponse<GetOrderItemResponse>>;
    /**
     * @param orderId Order Id
     * @param itemId  Item Id
     * @return Response from the API call
     */
    getOrderItem(orderId: string, itemId: string, requestOptions?: RequestOptions): Promise<ApiResponse<GetOrderItemResponse>>;
    /**
     * Updates the metadata from an order
     *
     * @param orderId         The order id
     * @param request         Request for updating the order metadata
     * @param idempotencyKey
     * @return Response from the API call
     */
    updateOrderMetadata(orderId: string, request: UpdateMetadataRequest, idempotencyKey?: string, requestOptions?: RequestOptions): Promise<ApiResponse<GetOrderResponse>>;
    /**
     * Gets an order
     *
     * @param orderId  Order id
     * @return Response from the API call
     */
    getOrder(orderId: string, requestOptions?: RequestOptions): Promise<ApiResponse<GetOrderResponse>>;
}
