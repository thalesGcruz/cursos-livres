{"version":3,"sources":["../../../formatters/html/themes.ts","../../../formatters/html/printers/main.ts","../../../formatters/html/formatter.ts","../../../formatters/html/head.ts","../../../formatters/html/main.ts"],"sourcesContent":["/*\n * @poppinss/dumper\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { HTMLPrinterStyles } from './types.js'\n\n/**\n * Default styles to use for pretty printing\n * the HTML output.\n */\nexport const themes = {\n  nightOwl: {\n    pre: 'background-color: #061626; color: #c792ea;',\n    toggle: 'color: #4f5357; background: none; border: none;',\n    braces: 'color: #ffd700;',\n    brackets: 'color: #ffd700;',\n    number: 'color: #f78c6c;',\n    bigInt: 'color: #f78c6c; font-weight: bold;',\n    boolean: 'color: #ff5874; font-style: italic;',\n    string: 'color: #ecc48d;',\n    null: 'color: #637777;',\n    undefined: 'color: #637777;',\n    prototypeLabel: 'color: #637777;',\n    symbol: 'color: #82aaff;',\n    regex: 'color: #ff5874;',\n    date: 'color: #7fdbca;',\n    buffer: 'color: #7fdbca;',\n    functionLabel: 'color: #89b4fa;',\n    arrayLabel: 'color: #82aaff;',\n    objectLabel: 'color: #82aaff;',\n    mapLabel: 'color: #82aaff;',\n    setLabel: 'color: #82aaff;',\n    objectKey: 'color: #c792ea;',\n    objectKeyPrefix: 'color: #637777; font-style: italic; font-weight: bold',\n    classLabel: 'color: #82aaff;',\n    collapseLabel: 'color: #7fdbca; font-style: italic;',\n    getterLabel: 'color: #7fdbca;',\n    circularLabel: 'color: #7fdbca;',\n    weakSetLabel: 'color: #7fdbca;',\n    weakRefLabel: 'color: #7fdbca;',\n    weakMapLabel: 'color: #7fdbca;',\n    observableLabel: 'color: #7fdbca;',\n    promiseLabel: 'color: #7fdbca;',\n    generatorLabel: 'color: #7fdbca;',\n    blobLabel: 'color: #7fdbca;',\n    unknownLabel: 'color: #7fdbca;',\n  },\n  minLight: {\n    pre: 'background-color: #fff; color: #212121;',\n    toggle: 'color: #989999; background: none; border: none;',\n    braces: 'color: #0431fa;',\n    brackets: 'color: #0431fa;',\n    number: 'color: #1976d2;',\n    bigInt: 'color: #1976d2; font-weight: bold;',\n    boolean: 'color: #1976d2; font-style: italic;',\n    string: 'color: #22863a;',\n    null: 'color: #9c9c9d;',\n    undefined: 'color: #9c9c9d;',\n    prototypeLabel: 'color: #9c9c9d;',\n    symbol: 'color: #d32f2f;',\n    regex: 'color: #1976d2;',\n    date: 'color: #7b3814;',\n    buffer: 'color: #7b3814;',\n    functionLabel: 'color: #6f42c1;',\n    arrayLabel: 'color: #d32f2f;',\n    objectLabel: 'color: #d32f2f;',\n    mapLabel: 'color: #d32f2f;',\n    setLabel: 'color: #d32f2f;',\n    objectKey: 'color: #212121;',\n    objectKeyPrefix: 'color: #9c9c9d; font-style: italic; font-weight: bold',\n    classLabel: 'color: #6f42c1;',\n    collapseLabel: 'color: #9c9c9d; font-style: italic;',\n    getterLabel: 'color: #7b3814;',\n    circularLabel: 'color: #7b3814;',\n    weakSetLabel: 'color: #7b3814;',\n    weakRefLabel: 'color: #7b3814;',\n    weakMapLabel: 'color: #7b3814;',\n    observableLabel: 'color: #7b3814;',\n    promiseLabel: 'color: #7b3814;',\n    generatorLabel: 'color: #7b3814;',\n    blobLabel: 'color: #7b3814;',\n    unknownLabel: 'color: #7b3814;',\n  },\n  catppuccin: {\n    pre: 'background-color: #1e1e2e; color: #94e2d5;',\n    toggle: 'color: #7c7c8c; background: none; border: none;',\n    braces: 'color: #f38ba8;',\n    brackets: 'color: #f38ba8;',\n    number: 'color: #fab387;',\n    bigInt: 'color: #fab387; font-weight: bold;',\n    boolean: 'color: #cba6f7; font-style: italic;',\n    string: 'color: #a6e3a1;',\n    null: 'color: #6c7086;',\n    undefined: 'color: #6c7086;',\n    prototypeLabel: 'color: #6c7086;',\n    symbol: 'color: #f9e2af;',\n    regex: 'color: #cba6f7;',\n    date: 'color: #94e2d5;',\n    buffer: 'color: #94e2d5;',\n    functionLabel: 'color: #cba6f7;',\n    arrayLabel: 'color: #f9e2af;',\n    objectLabel: 'color: #f9e2af;',\n    mapLabel: 'color: #f9e2af;',\n    setLabel: 'color: #f9e2af;',\n    objectKey: 'color: #89b4fa;',\n    objectKeyPrefix: 'color: #6c7086; font-style: italic; font-weight: bold',\n    classLabel: 'color: #cba6f7;',\n    collapseLabel: 'color: #6c7086; font-style: italic;',\n    getterLabel: 'color: #94e2d5;',\n    circularLabel: 'color: #94e2d5;',\n    weakSetLabel: 'color: #94e2d5;',\n    weakRefLabel: 'color: #94e2d5;',\n    weakMapLabel: 'color: #94e2d5;',\n    observableLabel: 'color: #94e2d5;',\n    promiseLabel: 'color: #94e2d5;',\n    generatorLabel: 'color: #94e2d5;',\n    blobLabel: 'color: #94e2d5;',\n    unknownLabel: 'color: #94e2d5;',\n  },\n} satisfies Record<string, HTMLPrinterStyles>\n","/*\n * @poppinss/dumper\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { HTMLFormatter } from '../main.js'\nimport type { TokenPrinters } from '../types.js'\nimport { htmlEscape, wordWrap } from '../../../src/helpers.js'\n\nconst dropdownIcon = '&#9660;'\n\nfunction openingBrace(formatter: HTMLFormatter) {\n  return `<span style=\"${formatter.styles.braces}\">{</span>`\n}\nfunction closingBrace(formatter: HTMLFormatter) {\n  return `<span style=\"${formatter.styles.braces}\">}</span>`\n}\nfunction openingBrackets(formatter: HTMLFormatter) {\n  return `<span style=\"${formatter.styles.brackets}\">[</span>`\n}\nfunction closingBrackets(formatter: HTMLFormatter) {\n  return `<span style=\"${formatter.styles.brackets}\">]</span>`\n}\n\n/**\n * HTML printers to pretty print parser tokens\n */\nexport const HTMLPrinters: TokenPrinters = {\n  'collapse': (token, formatter) => {\n    const styles =\n      token.token.type === 'object-start'\n        ? formatter.styles.objectLabel\n        : formatter.styles.arrayLabel\n\n    const collpaseStyles = formatter.styles.collapseLabel\n    return (\n      `<span style=\"${styles}\">${token.name}</span> ` +\n      (token.token.type === 'object-start' ? openingBrace(formatter) : openingBrackets(formatter)) +\n      ` <span style=\"${collpaseStyles}\">collapsed</span> ` +\n      (token.token.type === 'object-start' ? closingBrace(formatter) : closingBrackets(formatter))\n    )\n  },\n\n  'object-start': (token, formatter) => {\n    formatter.indentation.increment()\n    const styles = formatter.styles.objectLabel\n    const toggleStyles = formatter.styles.toggle\n    const label =\n      formatter.context.isStaticMember && formatter.context.staticDepth === 0\n        ? ' '\n        : `${token.constructorName || 'Object [null]'} `\n\n    return (\n      '<span class=\"dumper-group dumper-object-group\">' +\n      `<span style=\"${styles}\">${label}</span>` +\n      openingBrace(formatter) +\n      `<button class=\"dumper-toggle\" style=\"${toggleStyles}\">` +\n      `<span>${dropdownIcon}</span>` +\n      '</button><samp hidden=\"true\">'\n    )\n  },\n\n  'object-end': (_, formatter) => {\n    formatter.indentation.decrement()\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n\n    return indent + '</samp>' + closingBrace(formatter) + '</span>'\n  },\n\n  'object-key': (token, formatter) => {\n    formatter.context.isStack = token.value === 'stack'\n\n    const styles = formatter.styles.objectKey\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n\n    /**\n     * Computing value\n     */\n    let value = token.value\n    if (token.isSymbol) {\n      value = `[${value}]`\n    } else if (!/^[a-z$_][$\\w]*$/i.test(value)) {\n      value = `\"${htmlEscape(value.replace(/\"/g, '\\\\\"'))}\"`\n    }\n\n    /**\n     * Computing prefix\n     */\n    let prefix = ''\n    if (formatter.context.isStaticMember) {\n      formatter.context.staticDepth++\n      if (formatter.context.staticDepth === 1) {\n        const prefixStyles = formatter.styles.objectKeyPrefix\n        prefix =\n          `<span class=\"dumper-object-prefix\" style=\"${prefixStyles}\">` + `static ` + '</span>'\n      }\n    }\n\n    return (\n      indent +\n      prefix +\n      `<span class=\"dumper-object-key\" style=\"${styles}\">` +\n      `${value}` +\n      '</span>: '\n    )\n  },\n\n  'object-circular-ref': (_, formatter) => {\n    const styles = formatter.styles.circularLabel\n    return `<span style=\"${styles}\">[*Circular]</span>`\n  },\n\n  'object-max-depth-ref': (_, formatter) => {\n    const styles = formatter.styles.objectLabel\n    return `<span style=\"${styles}\">[Object]</span>`\n  },\n\n  'object-value-getter': (_, formatter) => {\n    const styles = formatter.styles.getterLabel\n    return `<span style=\"${styles}\">[Getter]</span>`\n  },\n\n  'object-value-start': () => {\n    return ''\n  },\n\n  'object-value-end': (_, formatter) => {\n    if (formatter.context.isStaticMember) {\n      formatter.context.staticDepth--\n    }\n    return `,`\n  },\n\n  'array-start': (token, formatter) => {\n    formatter.indentation.increment()\n    const toggleStyles = formatter.styles.toggle\n    const styles = formatter.styles.arrayLabel\n    const label = `${token.name}:${token.size} `\n\n    return (\n      '<span class=\"dumper-group dumper-array-group\">' +\n      `<span style=\"${styles}\">${label}</span>` +\n      openingBrackets(formatter) +\n      `<button class=\"dumper-toggle\" style=\"${toggleStyles}\">` +\n      `<span>${dropdownIcon}</span>` +\n      '</button><samp hidden=\"true\">'\n    )\n  },\n\n  'array-end': (_, formatter) => {\n    formatter.indentation.decrement()\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n\n    return indent + '</samp>' + closingBrackets(formatter) + '</span>'\n  },\n\n  'array-value-start': (_, formatter) => {\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    return indent\n  },\n\n  'array-value-hole': (_, formatter) => {\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    const styles = formatter.styles.undefined\n    return (\n      indent +\n      `<span class=\"dumper-undefined\" style=\"${styles}\">` +\n      `${htmlEscape('<hole>')},` +\n      '</span>'\n    )\n  },\n\n  'array-value-end': () => {\n    return `,`\n  },\n\n  'array-circular-ref': (_, formatter) => {\n    const styles = formatter.styles.circularLabel\n    return `<span style=\"${styles}\">[*Circular]</span>`\n  },\n\n  'array-max-depth-ref': (_, formatter) => {\n    const styles = formatter.styles.arrayLabel\n    return `<span style=\"${styles}\">[Array]</span>`\n  },\n\n  'array-max-length-ref': (token, formatter) => {\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    const styles = formatter.styles.arrayLabel\n    const itemsLeft = token.size - token.limit\n    if (itemsLeft <= 0) {\n      return ''\n    }\n\n    const label = itemsLeft === 1 ? `1 more item` : `${itemsLeft} more items`\n    return `${indent}<span style=\"${styles}\">[...${label}]</span>`\n  },\n\n  'prototype-start': (_, formatter) => {\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    formatter.indentation.increment()\n    const styles = formatter.styles.prototypeLabel\n    const toggleStyles = formatter.styles.toggle\n    const label = '[[Prototype]] '\n\n    return (\n      indent +\n      '<span class=\"dumper-group dumper-prototype-group\">' +\n      `<span style=\"${styles}\">${label}</span>` +\n      openingBrace(formatter) +\n      `<button class=\"dumper-toggle\" style=\"${toggleStyles}\">` +\n      `<span>${dropdownIcon}</span>` +\n      '</button><samp hidden=\"true\">'\n    )\n  },\n\n  'prototype-end': (_, formatter) => {\n    formatter.indentation.decrement()\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n\n    return indent + '</samp>' + closingBrace(formatter) + '</span>'\n  },\n\n  'map-start': (token, formatter) => {\n    formatter.indentation.increment()\n    const toggleStyles = formatter.styles.toggle\n    const styles = formatter.styles.mapLabel\n    const label = `Map:${token.size} `\n\n    return (\n      '<span class=\"dumper-group dumper-map-group\">' +\n      `<span style=\"${styles}\">${label}</span>` +\n      openingBrace(formatter) +\n      `<button class=\"dumper-toggle\" style=\"${toggleStyles}\">` +\n      `<span>${dropdownIcon}</span>` +\n      '</button><samp hidden=\"true\">'\n    )\n  },\n\n  'map-end': (_, formatter) => {\n    formatter.indentation.decrement()\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n\n    return indent + '</samp>' + closingBrace(formatter) + '</span>'\n  },\n\n  'map-row-start': (_, formatter) => {\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    formatter.indentation.increment()\n\n    return indent + openingBrackets(formatter)\n  },\n\n  'map-row-end': (_, formatter) => {\n    formatter.indentation.decrement()\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    return indent + closingBrackets(formatter) + `,`\n  },\n\n  'map-key-start': (_, formatter) => {\n    const styles = formatter.styles.objectKey\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n\n    return indent + `<span style=\"${styles}\">key</span>: `\n  },\n\n  'map-key-end': function (): string {\n    return ''\n  },\n\n  'map-value-start': (_, formatter) => {\n    const styles = formatter.styles.objectKey\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n\n    return indent + `<span style=\"${styles}\">value</span>: `\n  },\n\n  'map-value-end': function (): string {\n    return ''\n  },\n\n  'map-circular-ref': (_, formatter) => {\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    const styles = formatter.styles.circularLabel\n\n    return `${indent}<span style=\"${styles}\">[*Circular]</span>`\n  },\n\n  'map-max-depth-ref': (_, formatter) => {\n    const styles = formatter.styles.mapLabel\n\n    return `<span style=\"${styles}\">[Map]</span>`\n  },\n\n  'map-max-length-ref': (token, formatter) => {\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    const styles = formatter.styles.mapLabel\n    const itemsLeft = token.size - token.limit\n    if (itemsLeft <= 0) {\n      return ''\n    }\n\n    const label = itemsLeft === 1 ? `1 more item` : `${itemsLeft} more items`\n    return `${indent}<span style=\"${styles}\">[...${label}]</span>`\n  },\n\n  'set-start': (token, formatter) => {\n    formatter.indentation.increment()\n    const toggleStyles = formatter.styles.toggle\n    const styles = formatter.styles.setLabel\n    const label = `Set:${token.size} `\n\n    return (\n      '<span class=\"dumper-group dumper-set-group\">' +\n      `<span class=\"dumper-set-label\" style=\"${styles}\">${label}</span>` +\n      openingBrackets(formatter) +\n      `<button class=\"dumper-toggle\" style=\"${toggleStyles}\">` +\n      `<span>${dropdownIcon}</span>` +\n      '</button><samp hidden=\"true\">'\n    )\n  },\n\n  'set-end': (_, formatter) => {\n    formatter.indentation.decrement()\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n\n    return indent + '</samp>' + closingBrackets(formatter) + '</span>'\n  },\n\n  'set-value-start': (_, formatter) => {\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    return indent\n  },\n\n  'set-value-end': () => {\n    return `,`\n  },\n\n  'set-circular-ref': (_, formatter) => {\n    const styles = formatter.styles.circularLabel\n    return `<span style=\"${styles}\">[*Circular]</span>`\n  },\n\n  'set-max-depth-ref': (_, formatter) => {\n    const styles = formatter.styles.setLabel\n\n    return `<span style=\"${styles}\">[Set]</span>`\n  },\n\n  'set-max-length-ref': (token, formatter) => {\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    const styles = formatter.styles.setLabel\n    const itemsLeft = token.size - token.limit\n    if (itemsLeft <= 0) {\n      return ''\n    }\n\n    const label = itemsLeft === 1 ? `1 more item` : `${itemsLeft} more items`\n    return `${indent}<span style=\"${styles}\">[...${label}]</span>`\n  },\n\n  'string': (token, formatter) => {\n    let value = token.value\n    const indent = formatter.indentation.getSpaces()\n\n    if (formatter.context.isStack) {\n      value = token.value\n        .split('\\n')\n        .map((row, index) => {\n          let rowValue = `<span>${htmlEscape(row.trim())}</span>`\n          if (index > 0) {\n            rowValue = `${indent}${rowValue}`\n          }\n          return rowValue\n        })\n        .join('\\n')\n    } else {\n      value = wordWrap(token.value, {\n        newLine: formatter.newLine,\n        indent: formatter.indentation.getSpaces(),\n        width: 70,\n      })\n    }\n\n    const styles = formatter.styles.string\n    return `<span class=\"dumper-string\" style=\"${styles}\">` + `${value}` + '</span>'\n  },\n\n  'boolean': (token, formatter) => {\n    const styles = formatter.styles.boolean\n    return `<span class=\"dumper-boolean\" style=\"${styles}\">` + token.value + '</span>'\n  },\n\n  'number': (token, formatter) => {\n    const styles = formatter.styles.number\n    return `<span class=\"dumper-number\" style=\"${styles}\">` + token.value + '</span>'\n  },\n\n  'bigInt': (token, formatter) => {\n    const styles = formatter.styles.bigInt\n    return `<span class=\"dumper-big-int\" style=\"${styles}\">` + token.value + '</span>'\n  },\n\n  'undefined': (_, formatter) => {\n    const styles = formatter.styles.undefined\n    return `<span class=\"dumper-undefined\" style=\"${styles}\">` + 'undefined' + '</span>'\n  },\n\n  'null': (_, formatter) => {\n    const styles = formatter.styles.null\n    return `<span class=\"dumper-null\" style=\"${styles}\">` + 'null' + '</span>'\n  },\n\n  'symbol': (token, formatter) => {\n    const styles = formatter.styles.symbol\n    return `<span class=\"dumper-symbol\" style=\"${styles}\">` + token.value + '</span>'\n  },\n\n  'function': (token, formatter) => {\n    const className = token.isClass ? 'dumper-class' : 'dumper-function'\n    const styles = token.isClass ? formatter.styles.classLabel : formatter.styles.functionLabel\n\n    const async = token.isAsync ? `async ` : ''\n    const generator = token.isGenerator ? `*` : ''\n    const label = token.isClass\n      ? `[class ${token.name}]`\n      : `[${async}${generator}function ${token.name}]`\n\n    return `<span class=\"${className}\" style=\"${styles}\">` + label + '</span>'\n  },\n\n  'date': function (token, formatter): string {\n    const styles = formatter.styles.date\n    return `<span class=\"dumper-date\" style=\"${styles}\">` + token.value + '</span>'\n  },\n\n  'buffer': function (token, formatter): string {\n    const styles = formatter.styles.buffer\n    return `<span class=\"dumper-buffer\" style=\"${styles}\">` + htmlEscape(token.value) + '</span>'\n  },\n\n  'regexp': function (token, formatter): string {\n    const styles = formatter.styles.regex\n    return `<span class=\"dumper-regex\" style=\"${styles}\">` + token.value + '</span>'\n  },\n\n  'unknown': function (token, formatter): string {\n    const styles = formatter.styles.unknownLabel\n    return `<span class=\"dumper-value-unknown\" style=\"${styles}\">` + String(token.value) + '</span>'\n  },\n\n  'weak-set': function (_, formatter): string {\n    const styles = formatter.styles.weakSetLabel\n    return `<span class=\"dumper-weak-set\" style=\"${styles}\">` + `[WeakSet]` + '</span>'\n  },\n\n  'weak-ref': function (_, formatter): string {\n    const styles = formatter.styles.weakRefLabel\n    return `<span class=\"dumper-weak-ref\" style=\"${styles}\">` + `[WeakRef]` + '</span>'\n  },\n\n  'weak-map': function (_, formatter): string {\n    const styles = formatter.styles.weakMapLabel\n    return `<span class=\"dumper-weak-map\" style=\"${styles}\">` + `[WeakMap]` + '</span>'\n  },\n\n  'observable': function (_, formatter): string {\n    const styles = formatter.styles.observableLabel\n    return `<span class=\"dumper-observable\" style=\"${styles}\">` + `[Observable]` + '</span>'\n  },\n\n  'blob': function (token: { size: number; contentType: string }, formatter): string {\n    const styles = formatter.styles.objectLabel\n    const propertiesStart = `<span styles=\"${formatter.styles.braces}\">{ `\n    const propertiesEnd = `<span styles=\"${formatter.styles.braces}\"> }</span></span>`\n\n    const sizeProp = `<span styles=\"${formatter.styles.objectKey}\">size: </span>`\n    const sizeValue = `<span styles=\"${formatter.styles.number}\">${token.size}</span>,`\n\n    const typeProp = `<span styles=\"${formatter.styles.objectKey}\">type: </span>`\n    const typeValue = `<span styles=\"${formatter.styles.string}\">${token.contentType}</span>`\n\n    return (\n      `<span class=\"dumper-blob\" style=\"${styles}\">` +\n      '[Blob]' +\n      propertiesStart +\n      `${sizeProp}${sizeValue} ${typeProp}${typeValue}` +\n      propertiesEnd +\n      '</span>'\n    )\n  },\n\n  'promise': function (token: { isFulfilled: boolean }, formatter): string {\n    const styles = formatter.styles.promiseLabel\n    const label = token.isFulfilled ? 'resolved' : 'pending'\n    return (\n      `<span class=\"dumper-promise\" style=\"${styles}\">` +\n      `[Promise${htmlEscape(`<${label}>`)}]` +\n      '</span>'\n    )\n  },\n\n  'generator': function (token: { isAsync: boolean }, formatter): string {\n    const styles = formatter.styles.generatorLabel\n    const label = token.isAsync ? '[AsyncGenerator] {}' : '[Generator] {}'\n    return `<span class=\"dumper-generator\" style=\"${styles}\">` + label + '</span>'\n  },\n\n  'static-members-start': function (_, formatter): string {\n    formatter.context.isStaticMember = true\n    formatter.context.staticDepth = 0\n    return ''\n  },\n\n  'static-members-end': function (_, formatter): string {\n    formatter.context.isStaticMember = false\n    formatter.context.staticDepth = 0\n    return ''\n  },\n}\n","/*\n * @poppinss/dumper\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { themes } from './themes.js'\nimport type { Token } from '../../src/types.js'\nimport { HTMLPrinters } from './printers/main.js'\nimport type { HTMLFormatterConfig, HTMLPrinterStyles } from './types.js'\n\n/**\n * Copy-pasted from\n * https://github.com/ai/nanoid/blob/main/nanoid.js\n */\nconst seed = 'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nexport let nanoid = (length = 15) => {\n  let output = ''\n  const random = crypto.getRandomValues(new Uint8Array(length))\n  for (let n = 0; n < length; n++) {\n    output += seed[63 & random[n]]\n  }\n  return output\n}\n\n/**\n * HTMLFormatter is used to format a collection of parser\n * tokens into HTML output containing pre-tags.\n *\n * @example\n * ```ts\n * const parser = new Parser()\n * parser.parse(value)\n *\n * const tokens = parser.flush()\n *\n * const formatter = new HTMLFormatter()\n * const html = formatter.format(tokens)\n * ```\n */\nexport class HTMLFormatter {\n  #config: HTMLFormatterConfig\n\n  /**\n   * Styles for output elements\n   */\n  readonly styles: HTMLPrinterStyles\n\n  /**\n   * Context maintained through out the printing\n   * phase. Each instance has its own context\n   * that gets mutated internally.\n   */\n  context: Record<string, any>\n\n  /**\n   * Value for the newline character\n   */\n  readonly newLine = '\\n'\n\n  /**\n   * Utility to manage indentation\n   */\n  readonly indentation = {\n    counter: 0,\n\n    /**\n     * Increment the identation by 1 step\n     */\n    increment() {\n      this.counter++\n    },\n\n    /**\n     * Decrement the identation by 1 step\n     */\n    decrement() {\n      this.counter--\n    },\n\n    /**\n     * Get the identation spaces as per the current\n     * identation level\n     */\n    getSpaces() {\n      return new Array(this.counter * 2 + 1).join('&nbsp;')\n    },\n  }\n\n  constructor(config?: HTMLFormatterConfig, context?: Record<string, any>) {\n    this.context = context || {}\n    this.#config = config || {}\n    this.styles = Object.freeze({ ...themes.nightOwl, ...config?.styles })\n  }\n\n  /**\n   * Wraps the final output inside pre tags and add the script\n   * to activate the frontend iteractions.\n   */\n  #wrapOutput(code: string) {\n    const id = `dump-${nanoid()}`\n    const nonce = this.#config.cspNonce ? ` nonce=\"${this.#config.cspNonce}\"` : ''\n\n    return (\n      `<div id=\"${id}\" class=\"dumper-dump\">` +\n      `<pre style=\"${this.styles.pre}\"><code>${code}</code></pre>` +\n      `<script${nonce}>dumperActivate('${id}')</script>` +\n      '</div>'\n    )\n  }\n\n  /**\n   * Format a collection of tokens to HTML output wrapped\n   * inside the `pre` tag.\n   */\n  format(tokens: Token[]) {\n    return this.#wrapOutput(\n      tokens\n        .map((token) => {\n          const formatter = HTMLPrinters[token.type]\n          return formatter(token as any, this) || ''\n        })\n        .join('')\n    )\n  }\n}\n","/**\n * Creates the stylesheet content to be injected inside the head\n * of the document\n */\nexport function createStyleSheet() {\n  return `.dumper-dump, .dumper-dump pre, .dumper-dump code, .dumper-dump samp {\n  font-family: JetBrains Mono, monaspace argon, Menlo, Monaco, Consolas, monospace;\n}\n.dumper-dump pre {\n  line-height: 24px;\n  font-size: 15px;\n  overflow-x: scroll;\n  position:relative;\n  z-index:99999;\n  padding: 10px 15px;\n  margin: 0;\n}\n.dumper-dump pre samp {\n  position: relative;\n}\n.dumper-dump pre samp[hidden=\"true\"] {\n  display: none;\n}\n.dumper-dump .dumper-prototype-group {\n  opacity: 0.5;\n}\n\n.dumper-dump .dumper-toggle {\n   transform: rotate(270deg);\n}\n\n.dumper-dump .dumper-toggle span {\n  display: inline-block;\n  position: relative;\n  top: 1px;\n  margin: 0 5px;\n  font-size: 14px;\n}\n.dumper-dump .dumper-toggle[aria-expanded=\"true\"] {\n  transform: none;\n}`\n}\n\n/**\n * Returns the script tag contents to be injected inside the head\n * of the document\n */\nexport function createScript() {\n  return `function expandGroup(group) {\n  const trigger = group.querySelector('button')\n  trigger.setAttribute('aria-expanded', 'true')\n\n  const samp = group.querySelector('samp')\n  samp.removeAttribute('hidden')\n}\n\nfunction collapseGroup(group) {\n  const trigger = group.querySelector('button')\n  trigger.removeAttribute('aria-expanded', 'true')\n\n  const samp = group.querySelector('samp')\n  samp.setAttribute('hidden', 'true')\n}\n\nfunction dumperActivate(dumpId) {\n  document.querySelectorAll(\\`#$\\{dumpId} .dumper-toggle\\`).forEach((trigger) => {\n    trigger.addEventListener('click', function (event) {\n      const target = event.currentTarget\n      const parent = target.parentElement\n      const isExpanded = !!target.getAttribute('aria-expanded')\n\n      if (isExpanded) {\n        collapseGroup(parent)\n        if (event.metaKey) {\n          parent.querySelectorAll('.dumper-group').forEach((c) => collapseGroup(c))\n        }\n      } else {\n        expandGroup(parent)\n        if (event.metaKey) {\n          parent.querySelectorAll('.dumper-group').forEach((c) => expandGroup(c))\n        }\n      }\n    })\n  })\n}`\n}\n","/*\n * @poppinss/dumper\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Parser } from '../../src/parser.js'\nimport { HTMLFormatter } from './formatter.js'\nimport type { HTMLDumpConfig } from './types.js'\n\nexport * from './head.js'\nexport { themes } from './themes.js'\nexport { HTMLFormatter } from './formatter.js'\nexport { HTMLPrinters } from './printers/main.js'\n\n/**\n * Generate pretty printed HTML output for the provided value. You can\n * specify the parser and the formatter options as the 2nd argument.\n *\n * @example\n * ```ts\n * const html = dump(someValue)\n *\n * // With Parser options\n * const html = dump(someValue, {\n *   inspectObjectPrototype: true,\n *   depth: 10,\n *   showHidden: true,\n * })\n *\n * // With Formatter options\n * const html = dump(someValue, {\n *   styles: {\n *     number: 'color: yellow; font-weight: bold;'\n *   }\n * })\n * ```\n */\nexport function dump(value: any, config?: HTMLDumpConfig) {\n  const parser = new Parser(config)\n  parser.parse(value)\n  return new HTMLFormatter(config).format(parser.flush())\n}\n"],"mappings":"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","names":[]}