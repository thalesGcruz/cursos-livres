{"version":3,"sources":["../../../formatters/console/themes.ts","../../../formatters/console/printers/main.ts","../../../formatters/console/formatter.ts","../../../formatters/console/main.ts"],"sourcesContent":["/*\n * @poppinss/dumper\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport useColors from '@poppinss/colors'\nimport supportsColor from 'supports-color'\nimport type { ConsolePrinterStyles } from './types.js'\n\nconst colors = supportsColor.stdout ? useColors.ansi() : useColors.silent()\n\n/**\n * Default styles to use for pretty printing to ANSI output\n */\nexport const themes = {\n  default: {\n    braces: (value) => colors.yellow(value),\n    brackets: (value) => colors.yellow(value),\n    number: (value) => colors.yellow(value),\n    bigInt: (value) => colors.yellow().bold(value),\n    boolean: (value) => colors.yellow().italic(value),\n    string: (value) => colors.green(value),\n    null: (value) => colors.dim(value),\n    undefined: (value) => colors.dim(value),\n    prototypeLabel: (value) => colors.dim(value),\n    symbol: (value) => colors.magenta(value),\n    regex: (value) => colors.red(value),\n    date: (value) => colors.magenta(value),\n    buffer: (value) => colors.magenta(value),\n    functionLabel: (value) => colors.cyan().italic(value),\n    arrayLabel: (value) => colors.cyan(value),\n    objectLabel: (value) => colors.cyan(value),\n    mapLabel: (value) => colors.cyan(value),\n    setLabel: (value) => colors.cyan(value),\n    objectKey: (value) => colors.blue(value),\n    objectKeyPrefix: (value) => colors.dim(value),\n    classLabel: (value) => colors.cyan(value),\n    weakSetLabel: (value) => colors.cyan(value),\n    weakRefLabel: (value) => colors.cyan(value),\n    collapseLabel: (value) => colors.dim(value),\n    circularLabel: (value) => colors.cyan(value),\n    getterLabel: (value) => colors.cyan(value),\n    weakMapLabel: (value) => colors.cyan(value),\n    observableLabel: (value) => colors.cyan(value),\n    promiseLabel: (value) => colors.blue(value),\n    generatorLabel: (value) => colors.cyan(value),\n    blobLabel: (value) => colors.magenta(value),\n    unknownLabel: (value) => colors.magenta(value),\n  },\n} satisfies Record<string, ConsolePrinterStyles>\n","/*\n * @poppinss/dumper\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { wordWrap } from '../../../src/helpers.js'\nimport { ConsoleFormatter } from '../formatter.js'\nimport type { TokenPrinters } from '../types.js'\n\nfunction openingBrace(formatter: ConsoleFormatter) {\n  return formatter.styles.braces('{')\n}\nfunction closingBrace(formatter: ConsoleFormatter) {\n  return formatter.styles.braces('}')\n}\nfunction openingBrackets(formatter: ConsoleFormatter) {\n  return formatter.styles.brackets('[')\n}\nfunction closingBrackets(formatter: ConsoleFormatter) {\n  return formatter.styles.brackets(']')\n}\n\n/**\n * Console printers to pretty print parser tokens\n */\nexport const ConsolePrinters: TokenPrinters = {\n  'collapse': (token, formatter) => {\n    const styles =\n      token.token.type === 'object-start'\n        ? formatter.styles.objectLabel\n        : formatter.styles.arrayLabel\n\n    const collpaseStyles = formatter.styles.collapseLabel\n    return (\n      `${styles(token.name)} ` +\n      (token.token.type === 'object-start' ? openingBrace(formatter) : openingBrackets(formatter)) +\n      ` ${collpaseStyles('collpased')} ` +\n      (token.token.type === 'object-start' ? closingBrace(formatter) : closingBrackets(formatter))\n    )\n  },\n\n  'object-start': (token, formatter) => {\n    formatter.indentation.increment()\n    const styles = formatter.styles.objectLabel\n    const label =\n      (formatter.context.isStaticMember && formatter.context.staticDepth === 0) ||\n      token.constructorName === 'Object'\n        ? ''\n        : styles(`${token.constructorName || 'Object [null]'}`) + ' '\n\n    return label + openingBrace(formatter)\n  },\n\n  'object-end': (_, formatter) => {\n    formatter.indentation.decrement()\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    return indent + closingBrace(formatter)\n  },\n\n  'object-key': (token, formatter) => {\n    formatter.context.isStack = token.value === 'stack'\n\n    const styles = formatter.styles.objectKey\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n\n    /**\n     * Computing value\n     */\n    let value = token.value\n    if (token.isSymbol) {\n      value = `[${value}]`\n    }\n\n    /**\n     * Computing prefix\n     */\n    let prefix = ''\n    if (formatter.context.isStaticMember) {\n      formatter.context.staticDepth++\n      if (formatter.context.staticDepth === 1) {\n        const prefixStyles = formatter.styles.objectKeyPrefix\n        prefix = `${prefixStyles('static')} `\n      }\n    }\n\n    return indent + prefix + styles(value) + ': '\n  },\n\n  'object-circular-ref': (_, formatter) => {\n    const styles = formatter.styles.circularLabel\n    return styles('[*Circular]')\n  },\n\n  'object-max-depth-ref': (_, formatter) => {\n    const styles = formatter.styles.objectLabel\n    return styles('[Object]')\n  },\n\n  'object-value-getter': (_, formatter) => {\n    const styles = formatter.styles.getterLabel\n    return styles('[Getter]')\n  },\n\n  'object-value-start': () => {\n    return ''\n  },\n\n  'object-value-end': (_, formatter) => {\n    if (formatter.context.isStaticMember) {\n      formatter.context.staticDepth--\n    }\n    return `,`\n  },\n\n  'array-start': (token, formatter) => {\n    formatter.indentation.increment()\n    const styles = formatter.styles.arrayLabel\n    const label = token.name !== 'Array' ? styles(`${token.name}`) + ' ' : ''\n\n    return label + openingBrackets(formatter)\n  },\n\n  'array-end': (_, formatter) => {\n    formatter.indentation.decrement()\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    return indent + closingBrackets(formatter)\n  },\n\n  'array-value-start': (_, formatter) => {\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    return indent\n  },\n\n  'array-value-hole': (_, formatter) => {\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    const styles = formatter.styles.undefined\n    return indent + styles('<hole>') + ','\n  },\n\n  'array-value-end': () => {\n    return `,`\n  },\n\n  'array-circular-ref': (_, formatter) => {\n    const styles = formatter.styles.circularLabel\n    return styles('[*Circular]')\n  },\n\n  'array-max-depth-ref': (_, formatter) => {\n    const styles = formatter.styles.arrayLabel\n    return styles('[Array]')\n  },\n\n  'array-max-length-ref': (token, formatter) => {\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    const styles = formatter.styles.arrayLabel\n    const itemsLeft = token.size - token.limit\n    if (itemsLeft <= 0) {\n      return ''\n    }\n\n    const label = itemsLeft === 1 ? `1 more item` : `${itemsLeft} more items`\n    return indent + styles(`[...${label}]`)\n  },\n\n  'prototype-start': (_, formatter) => {\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    formatter.indentation.increment()\n    const styles = formatter.styles.prototypeLabel\n    const label = '[[Prototype]] '\n\n    return indent + styles(label) + openingBrace(formatter)\n  },\n\n  'prototype-end': (_, formatter) => {\n    formatter.indentation.decrement()\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n\n    return indent + closingBrace(formatter)\n  },\n\n  'map-start': (token, formatter) => {\n    formatter.indentation.increment()\n    const styles = formatter.styles.mapLabel\n    const label = `Map(${token.size}) `\n\n    return styles(label) + openingBrace(formatter)\n  },\n\n  'map-end': (_, formatter) => {\n    formatter.indentation.decrement()\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n\n    return indent + closingBrace(formatter)\n  },\n\n  'map-row-start': (_, formatter) => {\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    formatter.indentation.increment()\n\n    return indent + openingBrackets(formatter)\n  },\n\n  'map-row-end': (_, formatter) => {\n    formatter.indentation.decrement()\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    return indent + closingBrackets(formatter) + `,`\n  },\n\n  'map-key-start': (_, formatter) => {\n    const styles = formatter.styles.objectKey\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    return indent + styles('key') + ': '\n  },\n\n  'map-key-end': function (): string {\n    return ','\n  },\n\n  'map-value-start': (_, formatter) => {\n    const styles = formatter.styles.objectKey\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    return indent + styles('value') + ': '\n  },\n\n  'map-value-end': function (): string {\n    return ','\n  },\n\n  'map-circular-ref': (_, formatter) => {\n    const styles = formatter.styles.circularLabel\n    return styles('[*Circular]')\n  },\n\n  'map-max-depth-ref': (_, formatter) => {\n    const styles = formatter.styles.mapLabel\n    return styles('[Map]')\n  },\n\n  'map-max-length-ref': (token, formatter) => {\n    const styles = formatter.styles.mapLabel\n    const itemsLeft = token.size - token.limit\n    if (itemsLeft <= 0) {\n      return ''\n    }\n\n    const label = itemsLeft === 1 ? `1 more item` : `${itemsLeft} more items`\n    return styles(`[...${label}]`)\n  },\n\n  'set-start': (token, formatter) => {\n    formatter.indentation.increment()\n    const styles = formatter.styles.setLabel\n    const label = `Set(${token.size}) `\n\n    return styles(label) + openingBrackets(formatter)\n  },\n\n  'set-end': (_, formatter) => {\n    formatter.indentation.decrement()\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    return indent + closingBrackets(formatter)\n  },\n\n  'set-value-start': (_, formatter) => {\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    return indent\n  },\n\n  'set-value-end': () => {\n    return `,`\n  },\n\n  'set-circular-ref': (_, formatter) => {\n    const styles = formatter.styles.circularLabel\n    return styles('[*Circular]')\n  },\n\n  'set-max-depth-ref': (_, formatter) => {\n    const styles = formatter.styles.setLabel\n    return styles('[Set]')\n  },\n\n  'set-max-length-ref': (token, formatter) => {\n    const indent = `${formatter.newLine}${formatter.indentation.getSpaces()}`\n    const styles = formatter.styles.setLabel\n    const itemsLeft = token.size - token.limit\n    if (itemsLeft <= 0) {\n      return ''\n    }\n\n    const label = itemsLeft === 1 ? `1 more item` : `${itemsLeft} more items`\n    return indent + styles(`[...${label}]`)\n  },\n\n  'string': (token, formatter) => {\n    let value = token.value\n    const indent = formatter.indentation.getSpaces()\n\n    if (formatter.context.isStack) {\n      value = token.value\n        .split('\\n')\n        .map((row, index) => {\n          let rowValue = row.trim()\n          if (index > 0) {\n            rowValue = `${indent}${rowValue}`\n          }\n          return rowValue\n        })\n        .join('\\n')\n    } else {\n      value = wordWrap(token.value, {\n        newLine: formatter.newLine,\n        indent: formatter.indentation.getSpaces(),\n        width: 70,\n        escape: (line) => line,\n      })\n    }\n\n    const styles = formatter.styles.string\n    return styles(value)\n  },\n\n  'boolean': (token, formatter) => {\n    const styles = formatter.styles.boolean\n    return styles(String(token.value))\n  },\n\n  'number': (token, formatter) => {\n    const styles = formatter.styles.number\n    return styles(String(token.value))\n  },\n\n  'bigInt': (token, formatter) => {\n    const styles = formatter.styles.bigInt\n    return styles(token.value)\n  },\n\n  'undefined': (_, formatter) => {\n    const styles = formatter.styles.undefined\n    return styles('undefined')\n  },\n\n  'null': (_, formatter) => {\n    const styles = formatter.styles.null\n    return styles('null')\n  },\n\n  'symbol': (token, formatter) => {\n    const styles = formatter.styles.symbol\n    return styles(token.value)\n  },\n\n  'function': (token, formatter) => {\n    const styles = token.isClass ? formatter.styles.classLabel : formatter.styles.functionLabel\n\n    const async = token.isAsync ? `async ` : ''\n    const generator = token.isGenerator ? `*` : ''\n    const label = token.isClass\n      ? `[class ${token.name}]`\n      : `[${async}${generator}function ${token.name}]`\n\n    return styles(label)\n  },\n\n  'date': function (token, formatter): string {\n    const styles = formatter.styles.date\n    return styles(token.value)\n  },\n\n  'buffer': function (token, formatter): string {\n    const styles = formatter.styles.buffer\n    return styles(token.value)\n  },\n\n  'regexp': function (token, formatter): string {\n    const styles = formatter.styles.regex\n    return styles(token.value)\n  },\n\n  'unknown': function (token, formatter): string {\n    const styles = formatter.styles.unknownLabel\n    return styles(String(token.value))\n  },\n\n  'weak-set': function (_, formatter): string {\n    const styles = formatter.styles.weakSetLabel\n    return styles('[WeakSet]')\n  },\n\n  'weak-ref': function (_, formatter): string {\n    const styles = formatter.styles.weakRefLabel\n    return styles('[WeakRef]')\n  },\n\n  'weak-map': function (_, formatter): string {\n    const styles = formatter.styles.weakMapLabel\n    return styles('[WeakMap]')\n  },\n\n  'observable': function (_, formatter): string {\n    const styles = formatter.styles.observableLabel\n    return styles('[Observable]')\n  },\n\n  'blob': function (token: { size: number; contentType: string }, formatter): string {\n    const styles = formatter.styles.objectLabel\n\n    const sizeProp = formatter.styles.objectKey('size: ')\n    const sizeValue = formatter.styles.number(`${token.size}`)\n\n    const typeProp = token.contentType ? `, ${formatter.styles.objectKey('type: ')}` : ''\n    const typeValue = token.contentType ? formatter.styles.string(`${token.contentType}`) : ''\n\n    return (\n      styles('[Blob]') +\n      ' ' +\n      openingBrace(formatter) +\n      `${sizeProp}${sizeValue}${typeProp}${typeValue}` +\n      closingBrace(formatter)\n    )\n  },\n\n  'promise': function (token: { isFulfilled: boolean }, formatter): string {\n    const styles = formatter.styles.promiseLabel\n    const label = token.isFulfilled ? 'resolved' : 'pending'\n    return styles(`[Promise${`<${label}>`}]`)\n  },\n\n  'generator': function (token: { isAsync: boolean }, formatter): string {\n    const styles = formatter.styles.generatorLabel\n    const label = token.isAsync ? '[AsyncGenerator] {}' : '[Generator] {}'\n    return styles(label)\n  },\n\n  'static-members-start': function (_, formatter): string {\n    formatter.context.isStaticMember = true\n    formatter.context.staticDepth = 0\n    return ' '\n  },\n\n  'static-members-end': function (_, formatter): string {\n    formatter.context.isStaticMember = false\n    formatter.context.staticDepth = 0\n    return ''\n  },\n}\n","/*\n * @poppinss/dumper\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { themes } from './themes.js'\nimport type { Token } from '../../src/types.js'\nimport { ConsolePrinters } from './printers/main.js'\nimport type { ConsoleFormatterConfig, ConsolePrinterStyles } from './types.js'\n\n/**\n * ConsoleFormatter is used to format a collection of parser\n * tokens to CLI output.\n *\n * @example\n * ```ts\n * const parser = new Parser()\n * parser.parse(value)\n *\n * const tokens = parser.flush()\n *\n * const formatter = new ConsoleFormatter()\n * const output = formatter.format(tokens)\n * ```\n */\nexport class ConsoleFormatter {\n  /**\n   * Styles for output elements\n   */\n  readonly styles: ConsolePrinterStyles\n\n  /**\n   * Context maintained through out the printing\n   * phase. Each instance has its own context\n   * that gets mutated internally.\n   */\n  context: Record<string, any>\n\n  /**\n   * Value for the newline character\n   */\n  readonly newLine = '\\n'\n\n  /**\n   * Utility to manage indentation\n   */\n  readonly indentation = {\n    counter: 0,\n\n    /**\n     * Increment the identation by 1 step\n     */\n    increment() {\n      this.counter++\n    },\n\n    /**\n     * Decrement the identation by 1 step\n     */\n    decrement() {\n      this.counter--\n    },\n\n    /**\n     * Get the identation spaces as per the current\n     * identation level\n     */\n    getSpaces() {\n      return new Array(this.counter * 2 + 1).join(' ')\n    },\n  }\n\n  constructor(config?: ConsoleFormatterConfig, context?: Record<string, any>) {\n    this.context = context || {}\n    this.styles = Object.freeze({ ...themes.default, ...config?.styles })\n  }\n\n  /**\n   * Format a collection of tokens to ANSI output\n   */\n  format(tokens: Token[]) {\n    return tokens\n      .map((token) => {\n        const formatter = ConsolePrinters[token.type]\n        return formatter(token as any, this) || ''\n      })\n      .join('')\n  }\n}\n","/*\n * @poppinss/dumper\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Parser } from '../../src/parser.js'\nimport { ConsoleFormatter } from './formatter.js'\nimport type { ConsoleDumpConfig } from './types.js'\n\nexport { ConsoleFormatter }\nexport { themes } from './themes.js'\nexport { ConsolePrinters } from './printers/main.js'\n\n/**\n * Generate pretty printed HTML output for the provided value. You can\n * specify the parser and the formatter options as the 2nd argument.\n *\n * @example\n * ```ts\n * const html = dump(someValue)\n *\n * // With Parser options\n * const html = dump(someValue, {\n *   inspectObjectPrototype: true,\n *   depth: 10,\n *   showHidden: true,\n * })\n *\n * // With Formatter options\n * const html = dump(someValue, {\n *   styles: {\n *     number: 'color: yellow; font-weight: bold;'\n *   }\n * })\n * ```\n */\nexport function dump(value: any, config?: ConsoleDumpConfig) {\n  const parser = new Parser(config)\n  parser.parse(value)\n  return new ConsoleFormatter(config).format(parser.flush())\n}\n"],"mappings":"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","names":[]}