"use strict";
/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
exports.__esModule = true;
exports.TransfersController = void 0;
var tslib_1 = require("tslib");
var createTransfer_1 = require("../models/createTransfer");
var getTransfer_1 = require("../models/getTransfer");
var listTransfers_1 = require("../models/listTransfers");
var schema_1 = require("../schema");
var baseController_1 = require("./baseController");
var TransfersController = /** @class */ (function (_super) {
    tslib_1.__extends(TransfersController, _super);
    function TransfersController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @param transferId
     * @return Response from the API call
     */
    TransfersController.prototype.getTransferById = function (transferId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var req, mapped;
            return tslib_1.__generator(this, function (_a) {
                req = this.createRequest('GET');
                mapped = req.prepareArgs({ transferId: [transferId, (0, schema_1.string)()] });
                req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/transfers/", ""], ["/transfers/", ""])), mapped.transferId);
                req.authenticate([{ httpBasic: true }]);
                return [2 /*return*/, req.callAsJson(getTransfer_1.getTransferSchema, requestOptions)];
            });
        });
    };
    /**
     * @param request
     * @return Response from the API call
     */
    TransfersController.prototype.createTransfer = function (request, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var req, mapped;
            return tslib_1.__generator(this, function (_a) {
                req = this.createRequest('POST', '/transfers/recipients');
                mapped = req.prepareArgs({
                    request: [request, createTransfer_1.createTransferSchema]
                });
                req.json(mapped.request);
                req.authenticate([{ httpBasic: true }]);
                return [2 /*return*/, req.callAsJson(getTransfer_1.getTransferSchema, requestOptions)];
            });
        });
    };
    /**
     * Gets all transfers
     *
     * @return Response from the API call
     */
    TransfersController.prototype.getTransfers = function (requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var req;
            return tslib_1.__generator(this, function (_a) {
                req = this.createRequest('GET', '/transfers');
                req.authenticate([{ httpBasic: true }]);
                return [2 /*return*/, req.callAsJson(listTransfers_1.listTransfersSchema, requestOptions)];
            });
        });
    };
    return TransfersController;
}(baseController_1.BaseController));
exports.TransfersController = TransfersController;
var templateObject_1;
//# sourceMappingURL=transfersController.js.map