{"version":3,"sources":["../../../src/client/main.ts","../../../src/client/config.ts"],"sourcesContent":["/*\n * @adonisjs/vite\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/// <reference types=\"@vavite/multibuild\" />\n\nimport { PluginOption } from 'vite'\nimport PluginRestart from 'vite-plugin-restart'\n\nimport { config } from './config.js'\nimport type { PluginOptions } from './types.js'\n\ndeclare module 'vite' {\n  interface ManifestChunk {\n    integrity: string\n  }\n}\n\n/**\n * Vite plugin for AdonisJS\n */\nexport default function adonisjs(options: PluginOptions): PluginOption[] {\n  const fullOptions = Object.assign(\n    {\n      assetsUrl: '/assets',\n      buildDirectory: 'public/assets',\n      reload: ['./resources/views/**/*.edge'],\n    },\n    options\n  )\n\n  return [PluginRestart({ reload: fullOptions.reload }), config(fullOptions)]\n}\n","/*\n * @adonisjs/vite\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { join } from 'node:path'\nimport type { ConfigEnv, Plugin, UserConfig } from 'vite'\n\nimport { addTrailingSlash } from '../utils.js'\nimport type { PluginFullOptions } from './types.js'\n\n/**\n * Resolve the `config.base` value\n */\nexport function resolveBase(\n  config: UserConfig,\n  options: PluginFullOptions,\n  command: 'build' | 'serve'\n): string {\n  if (config.base) return config.base\n  if (command === 'build') {\n    return addTrailingSlash(options.assetsUrl)\n  }\n\n  return '/'\n}\n\n/**\n * Vite config hook\n */\nexport function configHook(\n  options: PluginFullOptions,\n  userConfig: UserConfig,\n  { command }: ConfigEnv\n): UserConfig {\n  const config: UserConfig = {\n    publicDir: userConfig.publicDir ?? false,\n    base: resolveBase(userConfig, options, command),\n\n    /**\n     * Disable the vite dev server cors handling. Otherwise, it will\n     * override the cors settings defined by @adonisjs/cors\n     * https://github.com/adonisjs/vite/issues/13\n     */\n    server: { cors: userConfig.server?.cors ?? false },\n\n    build: {\n      assetsDir: '',\n      emptyOutDir: true,\n      manifest: userConfig.build?.manifest ?? true,\n      outDir: userConfig.build?.outDir ?? options.buildDirectory,\n      assetsInlineLimit: userConfig.build?.assetsInlineLimit ?? 0,\n\n      rollupOptions: {\n        input: options.entrypoints.map((entrypoint) => join(userConfig.root || '', entrypoint)),\n      },\n    },\n  }\n\n  return config\n}\n\n/**\n * Update the user vite config to match the Adonis requirements\n */\nexport const config = (options: PluginFullOptions): Plugin => {\n  return {\n    name: 'vite-plugin-adonis:config',\n    enforce: 'post',\n    config: configHook.bind(null, options),\n  }\n}\n"],"mappings":";;;;;AAYA,OAAO,mBAAmB;;;ACH1B,SAAS,YAAY;AASd,SAAS,YACdA,SACA,SACA,SACQ;AACR,MAAIA,QAAO;AAAM,WAAOA,QAAO;AAC/B,MAAI,YAAY,SAAS;AACvB,WAAO,iBAAiB,QAAQ,SAAS;AAAA,EAC3C;AAEA,SAAO;AACT;AAKO,SAAS,WACd,SACA,YACA,EAAE,QAAQ,GACE;AACZ,QAAMA,UAAqB;AAAA,IACzB,WAAW,WAAW,aAAa;AAAA,IACnC,MAAM,YAAY,YAAY,SAAS,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAO9C,QAAQ,EAAE,MAAM,WAAW,QAAQ,QAAQ,MAAM;AAAA,IAEjD,OAAO;AAAA,MACL,WAAW;AAAA,MACX,aAAa;AAAA,MACb,UAAU,WAAW,OAAO,YAAY;AAAA,MACxC,QAAQ,WAAW,OAAO,UAAU,QAAQ;AAAA,MAC5C,mBAAmB,WAAW,OAAO,qBAAqB;AAAA,MAE1D,eAAe;AAAA,QACb,OAAO,QAAQ,YAAY,IAAI,CAAC,eAAe,KAAK,WAAW,QAAQ,IAAI,UAAU,CAAC;AAAA,MACxF;AAAA,IACF;AAAA,EACF;AAEA,SAAOA;AACT;AAKO,IAAM,SAAS,CAAC,YAAuC;AAC5D,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IACT,QAAQ,WAAW,KAAK,MAAM,OAAO;AAAA,EACvC;AACF;;;ADjDe,SAAR,SAA0B,SAAwC;AACvE,QAAM,cAAc,OAAO;AAAA,IACzB;AAAA,MACE,WAAW;AAAA,MACX,gBAAgB;AAAA,MAChB,QAAQ,CAAC,6BAA6B;AAAA,IACxC;AAAA,IACA;AAAA,EACF;AAEA,SAAO,CAAC,cAAc,EAAE,QAAQ,YAAY,OAAO,CAAC,GAAG,OAAO,WAAW,CAAC;AAC5E;","names":["config"]}