/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
import { discriminatedGetTransactionResponseSchema } from '../models/discriminatedSchemas';
import { dict, lazy, nullable, number, object, optional, string, } from '../schema';
import { getCustomerResponseSchema, } from './getCustomerResponse';
import { getInvoiceResponseSchema, } from './getInvoiceResponse';
import { getOrderResponseSchema } from './getOrderResponse';
import { getPaymentOriginResponseSchema, } from './getPaymentOriginResponse';
export const getChargeResponseSchema = object({
    id: ['id', optional(nullable(string()))],
    code: ['code', optional(nullable(string()))],
    gatewayId: ['gateway_id', optional(nullable(string()))],
    amount: ['amount', optional(nullable(number()))],
    status: ['status', optional(nullable(string()))],
    currency: ['currency', optional(nullable(string()))],
    paymentMethod: ['payment_method', optional(nullable(string()))],
    dueAt: ['due_at', optional(nullable(string()))],
    createdAt: ['created_at', optional(nullable(string()))],
    updatedAt: ['updated_at', optional(nullable(string()))],
    lastTransaction: [
        'last_transaction',
        optional(nullable(lazy(() => discriminatedGetTransactionResponseSchema))),
    ],
    invoice: [
        'invoice',
        optional(nullable(lazy(() => getInvoiceResponseSchema))),
    ],
    order: ['order', optional(nullable(lazy(() => getOrderResponseSchema)))],
    customer: [
        'customer',
        optional(nullable(lazy(() => getCustomerResponseSchema))),
    ],
    metadata: ['metadata', optional(nullable(dict(string())))],
    paidAt: ['paid_at', optional(nullable(string()))],
    canceledAt: ['canceled_at', optional(nullable(string()))],
    canceledAmount: ['canceled_amount', optional(nullable(number()))],
    paidAmount: ['paid_amount', optional(nullable(number()))],
    interestAndFinePaid: ['interest_and_fine_paid', optional(nullable(number()))],
    recurrencyCycle: ['recurrency_cycle', optional(nullable(string()))],
    paymentOrigin: [
        'payment_origin',
        optional(nullable(lazy(() => getPaymentOriginResponseSchema))),
    ],
});
//# sourceMappingURL=getChargeResponse.js.map