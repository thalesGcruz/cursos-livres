/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
import { array, boolean, dict, lazy, nullable, number, object, optional, string, } from '../schema';
import { getCardResponseSchema } from './getCardResponse';
import { getCustomerResponseSchema, } from './getCustomerResponse';
import { getDiscountResponseSchema, } from './getDiscountResponse';
import { getIncrementResponseSchema, } from './getIncrementResponse';
import { getPeriodResponseSchema, } from './getPeriodResponse';
import { getSetupResponseSchema } from './getSetupResponse';
import { getSubscriptionBoletoResponseSchema, } from './getSubscriptionBoletoResponse';
import { getSubscriptionItemResponseSchema, } from './getSubscriptionItemResponse';
import { getSubscriptionSplitResponseSchema, } from './getSubscriptionSplitResponse';
export const getSubscriptionResponseSchema = object({
    id: ['id', optional(nullable(string()))],
    code: ['code', optional(nullable(string()))],
    startAt: ['start_at', optional(nullable(string()))],
    interval: ['interval', optional(nullable(string()))],
    intervalCount: ['interval_count', optional(nullable(number()))],
    billingType: ['billing_type', optional(nullable(string()))],
    currentCycle: [
        'current_cycle',
        optional(nullable(lazy(() => getPeriodResponseSchema))),
    ],
    paymentMethod: ['payment_method', optional(nullable(string()))],
    currency: ['currency', optional(nullable(string()))],
    installments: ['installments', optional(nullable(number()))],
    status: ['status', optional(nullable(string()))],
    createdAt: ['created_at', optional(nullable(string()))],
    updatedAt: ['updated_at', optional(nullable(string()))],
    customer: [
        'customer',
        optional(nullable(lazy(() => getCustomerResponseSchema))),
    ],
    card: ['card', optional(nullable(lazy(() => getCardResponseSchema)))],
    items: [
        'items',
        optional(nullable(array(lazy(() => getSubscriptionItemResponseSchema)))),
    ],
    statementDescriptor: ['statement_descriptor', optional(nullable(string()))],
    metadata: ['metadata', optional(nullable(dict(string())))],
    setup: ['setup', optional(nullable(lazy(() => getSetupResponseSchema)))],
    gatewayAffiliationId: [
        'gateway_affiliation_id',
        optional(nullable(string())),
    ],
    nextBillingAt: ['next_billing_at', optional(nullable(string()))],
    billingDay: ['billing_day', optional(nullable(number()))],
    minimumPrice: ['minimum_price', optional(nullable(number()))],
    canceledAt: ['canceled_at', optional(nullable(string()))],
    discounts: [
        'discounts',
        optional(nullable(array(lazy(() => getDiscountResponseSchema)))),
    ],
    increments: [
        'increments',
        optional(nullable(array(lazy(() => getIncrementResponseSchema)))),
    ],
    boletoDueDays: ['boleto_due_days', optional(nullable(number()))],
    split: [
        'split',
        optional(nullable(lazy(() => getSubscriptionSplitResponseSchema))),
    ],
    boleto: [
        'boleto',
        optional(nullable(lazy(() => getSubscriptionBoletoResponseSchema))),
    ],
    manualBilling: ['manual_billing', optional(nullable(boolean()))],
});
//# sourceMappingURL=getSubscriptionResponse.js.map