/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
import { Schema } from '../schema';
import { CreateCardRequest } from './createCardRequest';
import { CreateCustomerRequest } from './createCustomerRequest';
import { CreateDiscountRequest } from './createDiscountRequest';
import { CreateIncrementRequest } from './createIncrementRequest';
import { CreatePeriodRequest } from './createPeriodRequest';
import { CreatePricingSchemeRequest } from './createPricingSchemeRequest';
import { CreateSetupRequest } from './createSetupRequest';
import { CreateShippingRequest } from './createShippingRequest';
import { CreateSubMerchantRequest } from './createSubMerchantRequest';
import { CreateSubscriptionBoletoRequest } from './createSubscriptionBoletoRequest';
import { CreateSubscriptionItemRequest } from './createSubscriptionItemRequest';
import { CreateSubscriptionSplitRequest } from './createSubscriptionSplitRequest';
/** Request for creating a subcription */
export interface CreateSubscriptionRequest {
    /** Customer */
    customer: CreateCustomerRequest;
    /** Card */
    card: CreateCardRequest;
    /** Subscription code */
    code: string;
    /** Payment method */
    paymentMethod: string;
    /** Billing type */
    billingType: string;
    /** Statement descriptor for credit card subscriptions */
    statementDescriptor: string;
    /** Subscription description */
    description: string;
    /** Currency */
    currency: string;
    /** Interval */
    interval: string;
    /** Interval count */
    intervalCount: number;
    /** Subscription pricing scheme */
    pricingScheme: CreatePricingSchemeRequest;
    /** Subscription items */
    items: CreateSubscriptionItemRequest[];
    /** Shipping */
    shipping: CreateShippingRequest;
    /** Discounts */
    discounts: CreateDiscountRequest[];
    /** Metadata */
    metadata: Record<string, string>;
    /** Setup data */
    setup?: CreateSetupRequest;
    /** Plan id */
    planId?: string;
    /** Customer id */
    customerId?: string;
    /** Card id */
    cardId?: string;
    /** Billing day */
    billingDay?: number;
    /** Number of installments */
    installments?: number;
    /** Subscription start date */
    startAt?: string;
    /** Subscription minimum price */
    minimumPrice?: number;
    /** Number of cycles */
    cycles?: number;
    /** Card token */
    cardToken?: string;
    /** Gateway Affiliation code */
    gatewayAffiliationId?: string;
    /** Quantity */
    quantity?: number;
    /** Days until boleto expires */
    boletoDueDays?: number;
    /** Increments */
    increments: CreateIncrementRequest[];
    period?: CreatePeriodRequest;
    /** SubMerchant */
    submerchant?: CreateSubMerchantRequest;
    /** Subscription's split */
    split?: CreateSubscriptionSplitRequest;
    /** Information about fines and interest on the "boleto" used from payment */
    boleto?: CreateSubscriptionBoletoRequest;
}
export declare const createSubscriptionRequestSchema: Schema<CreateSubscriptionRequest>;
