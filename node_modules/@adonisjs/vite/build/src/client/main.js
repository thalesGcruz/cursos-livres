import {
  addTrailingSlash
} from "../../chunk-CFRBPZ4N.js";

// src/client/main.ts
import PluginRestart from "vite-plugin-restart";

// src/client/config.ts
import { join } from "node:path";
function resolveBase(config2, options, command) {
  if (config2.base)
    return config2.base;
  if (command === "build") {
    return addTrailingSlash(options.assetsUrl);
  }
  return "/";
}
function configHook(options, userConfig, { command }) {
  const config2 = {
    publicDir: userConfig.publicDir ?? false,
    base: resolveBase(userConfig, options, command),
    /**
     * Disable the vite dev server cors handling. Otherwise, it will
     * override the cors settings defined by @adonisjs/cors
     * https://github.com/adonisjs/vite/issues/13
     */
    server: { cors: userConfig.server?.cors ?? false },
    build: {
      assetsDir: "",
      emptyOutDir: true,
      manifest: userConfig.build?.manifest ?? true,
      outDir: userConfig.build?.outDir ?? options.buildDirectory,
      assetsInlineLimit: userConfig.build?.assetsInlineLimit ?? 0,
      rollupOptions: {
        input: options.entrypoints.map((entrypoint) => join(userConfig.root || "", entrypoint))
      }
    }
  };
  return config2;
}
var config = (options) => {
  return {
    name: "vite-plugin-adonis:config",
    enforce: "post",
    config: configHook.bind(null, options)
  };
};

// src/client/main.ts
function adonisjs(options) {
  const fullOptions = Object.assign(
    {
      assetsUrl: "/assets",
      buildDirectory: "public/assets",
      reload: ["./resources/views/**/*.edge"]
    },
    options
  );
  return [PluginRestart({ reload: fullOptions.reload }), config(fullOptions)];
}
export {
  adonisjs as default
};
//# sourceMappingURL=main.js.map