"use strict";
/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
exports.__esModule = true;
exports.getCashTransactionResponseSchema = void 0;
var schema_1 = require("../schema");
var getAntifraudResponse_1 = require("./getAntifraudResponse");
var getFineResponse_1 = require("./getFineResponse");
var getGatewayResponseResponse_1 = require("./getGatewayResponseResponse");
var getInterestResponse_1 = require("./getInterestResponse");
var getSplitResponse_1 = require("./getSplitResponse");
exports.getCashTransactionResponseSchema = (0, schema_1.object)({
    description: ['description', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    gatewayId: ['gateway_id', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    amount: ['amount', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
    status: ['status', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    success: ['success', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
    createdAt: ['created_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    updatedAt: ['updated_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    attemptCount: ['attempt_count', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
    maxAttempts: ['max_attempts', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
    splits: [
        'splits',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function () { return getSplitResponse_1.getSplitResponseSchema; })))),
    ],
    nextAttempt: ['next_attempt', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    id: ['id', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    gatewayResponse: [
        'gateway_response',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getGatewayResponseResponse_1.getGatewayResponseResponseSchema; }))),
    ],
    antifraudResponse: [
        'antifraud_response',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getAntifraudResponse_1.getAntifraudResponseSchema; }))),
    ],
    metadata: ['metadata', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.dict)((0, schema_1.string)())))],
    split: [
        'split',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function () { return getSplitResponse_1.getSplitResponseSchema; })))),
    ],
    interest: [
        'interest',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getInterestResponse_1.getInterestResponseSchema; }))),
    ],
    fine: ['fine', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getFineResponse_1.getFineResponseSchema; })))],
    maxDaysToPayPastDue: [
        'max_days_to_pay_past_due',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)())),
    ],
    transactionType: ['transaction_type', (0, schema_1.optional)((0, schema_1.string)())]
});
//# sourceMappingURL=getCashTransactionResponse.js.map