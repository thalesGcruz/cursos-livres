"use strict";
/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
exports.__esModule = true;
exports.getSubscriptionResponseSchema = void 0;
var schema_1 = require("../schema");
var getCardResponse_1 = require("./getCardResponse");
var getCustomerResponse_1 = require("./getCustomerResponse");
var getDiscountResponse_1 = require("./getDiscountResponse");
var getIncrementResponse_1 = require("./getIncrementResponse");
var getPeriodResponse_1 = require("./getPeriodResponse");
var getSetupResponse_1 = require("./getSetupResponse");
var getSubscriptionBoletoResponse_1 = require("./getSubscriptionBoletoResponse");
var getSubscriptionItemResponse_1 = require("./getSubscriptionItemResponse");
var getSubscriptionSplitResponse_1 = require("./getSubscriptionSplitResponse");
exports.getSubscriptionResponseSchema = (0, schema_1.object)({
    id: ['id', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    code: ['code', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    startAt: ['start_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    interval: ['interval', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    intervalCount: ['interval_count', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
    billingType: ['billing_type', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    currentCycle: [
        'current_cycle',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getPeriodResponse_1.getPeriodResponseSchema; }))),
    ],
    paymentMethod: ['payment_method', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    currency: ['currency', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    installments: ['installments', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
    status: ['status', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    createdAt: ['created_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    updatedAt: ['updated_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    customer: [
        'customer',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getCustomerResponse_1.getCustomerResponseSchema; }))),
    ],
    card: ['card', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getCardResponse_1.getCardResponseSchema; })))],
    items: [
        'items',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function () { return getSubscriptionItemResponse_1.getSubscriptionItemResponseSchema; })))),
    ],
    statementDescriptor: ['statement_descriptor', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    metadata: ['metadata', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.dict)((0, schema_1.string)())))],
    setup: ['setup', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getSetupResponse_1.getSetupResponseSchema; })))],
    gatewayAffiliationId: [
        'gateway_affiliation_id',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)())),
    ],
    nextBillingAt: ['next_billing_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    billingDay: ['billing_day', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
    minimumPrice: ['minimum_price', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
    canceledAt: ['canceled_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    discounts: [
        'discounts',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function () { return getDiscountResponse_1.getDiscountResponseSchema; })))),
    ],
    increments: [
        'increments',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function () { return getIncrementResponse_1.getIncrementResponseSchema; })))),
    ],
    boletoDueDays: ['boleto_due_days', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
    split: [
        'split',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getSubscriptionSplitResponse_1.getSubscriptionSplitResponseSchema; }))),
    ],
    boleto: [
        'boleto',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getSubscriptionBoletoResponse_1.getSubscriptionBoletoResponseSchema; }))),
    ],
    manualBilling: ['manual_billing', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
});
//# sourceMappingURL=getSubscriptionResponse.js.map