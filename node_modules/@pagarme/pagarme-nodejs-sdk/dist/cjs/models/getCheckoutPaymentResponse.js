"use strict";
/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
exports.__esModule = true;
exports.getCheckoutPaymentResponseSchema = void 0;
var schema_1 = require("../schema");
var getAddressResponse_1 = require("./getAddressResponse");
var getCheckoutBankTransferPaymentResponse_1 = require("./getCheckoutBankTransferPaymentResponse");
var getCheckoutBoletoPaymentResponse_1 = require("./getCheckoutBoletoPaymentResponse");
var getCheckoutCreditCardPaymentResponse_1 = require("./getCheckoutCreditCardPaymentResponse");
var getCheckoutDebitCardPaymentResponse_1 = require("./getCheckoutDebitCardPaymentResponse");
var getCheckoutPixPaymentResponse_1 = require("./getCheckoutPixPaymentResponse");
var getCustomerResponse_1 = require("./getCustomerResponse");
var getShippingResponse_1 = require("./getShippingResponse");
exports.getCheckoutPaymentResponseSchema = (0, schema_1.object)({
    id: ['id', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    amount: ['amount', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
    defaultPaymentMethod: [
        'default_payment_method',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)())),
    ],
    successUrl: ['success_url', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    paymentUrl: ['payment_url', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    gatewayAffiliationId: [
        'gateway_affiliation_id',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)())),
    ],
    acceptedPaymentMethods: [
        'accepted_payment_methods',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)()))),
    ],
    status: ['status', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    skipCheckoutSuccessPage: [
        'skip_checkout_success_page',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)())),
    ],
    createdAt: ['created_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    updatedAt: ['updated_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    canceledAt: ['canceled_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    customerEditable: ['customer_editable', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
    customer: [
        'customer',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getCustomerResponse_1.getCustomerResponseSchema; }))),
    ],
    billingaddress: [
        'billingaddress',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getAddressResponse_1.getAddressResponseSchema; }))),
    ],
    creditCard: [
        'credit_card',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getCheckoutCreditCardPaymentResponse_1.getCheckoutCreditCardPaymentResponseSchema; }))),
    ],
    boleto: [
        'boleto',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getCheckoutBoletoPaymentResponse_1.getCheckoutBoletoPaymentResponseSchema; }))),
    ],
    billingAddressEditable: [
        'billing_address_editable',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)())),
    ],
    shipping: [
        'shipping',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getShippingResponse_1.getShippingResponseSchema; }))),
    ],
    shippable: ['shippable', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
    closedAt: ['closed_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    expiresAt: ['expires_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    currency: ['currency', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    debitCard: [
        'debit_card',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getCheckoutDebitCardPaymentResponse_1.getCheckoutDebitCardPaymentResponseSchema; }))),
    ],
    bankTransfer: [
        'bank_transfer',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getCheckoutBankTransferPaymentResponse_1.getCheckoutBankTransferPaymentResponseSchema; }))),
    ],
    acceptedBrands: ['accepted_brands', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
    pix: [
        'pix',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getCheckoutPixPaymentResponse_1.getCheckoutPixPaymentResponseSchema; }))),
    ]
});
//# sourceMappingURL=getCheckoutPaymentResponse.js.map