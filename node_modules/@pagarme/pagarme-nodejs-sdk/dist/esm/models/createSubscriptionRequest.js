/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
import { array, dict, lazy, number, object, optional, string, } from '../schema';
import { createCardRequestSchema, } from './createCardRequest';
import { createCustomerRequestSchema, } from './createCustomerRequest';
import { createDiscountRequestSchema, } from './createDiscountRequest';
import { createIncrementRequestSchema, } from './createIncrementRequest';
import { createPeriodRequestSchema, } from './createPeriodRequest';
import { createPricingSchemeRequestSchema, } from './createPricingSchemeRequest';
import { createSetupRequestSchema, } from './createSetupRequest';
import { createShippingRequestSchema, } from './createShippingRequest';
import { createSubMerchantRequestSchema, } from './createSubMerchantRequest';
import { createSubscriptionBoletoRequestSchema, } from './createSubscriptionBoletoRequest';
import { createSubscriptionItemRequestSchema, } from './createSubscriptionItemRequest';
import { createSubscriptionSplitRequestSchema, } from './createSubscriptionSplitRequest';
export const createSubscriptionRequestSchema = object({
    customer: ['customer', lazy(() => createCustomerRequestSchema)],
    card: ['card', lazy(() => createCardRequestSchema)],
    code: ['code', string()],
    paymentMethod: ['payment_method', string()],
    billingType: ['billing_type', string()],
    statementDescriptor: ['statement_descriptor', string()],
    description: ['description', string()],
    currency: ['currency', string()],
    interval: ['interval', string()],
    intervalCount: ['interval_count', number()],
    pricingScheme: [
        'pricing_scheme',
        lazy(() => createPricingSchemeRequestSchema),
    ],
    items: ['items', array(lazy(() => createSubscriptionItemRequestSchema))],
    shipping: ['shipping', lazy(() => createShippingRequestSchema)],
    discounts: ['discounts', array(lazy(() => createDiscountRequestSchema))],
    metadata: ['metadata', dict(string())],
    setup: ['setup', optional(lazy(() => createSetupRequestSchema))],
    planId: ['plan_id', optional(string())],
    customerId: ['customer_id', optional(string())],
    cardId: ['card_id', optional(string())],
    billingDay: ['billing_day', optional(number())],
    installments: ['installments', optional(number())],
    startAt: ['start_at', optional(string())],
    minimumPrice: ['minimum_price', optional(number())],
    cycles: ['cycles', optional(number())],
    cardToken: ['card_token', optional(string())],
    gatewayAffiliationId: ['gateway_affiliation_id', optional(string())],
    quantity: ['quantity', optional(number())],
    boletoDueDays: ['boleto_due_days', optional(number())],
    increments: ['increments', array(lazy(() => createIncrementRequestSchema))],
    period: ['period', optional(lazy(() => createPeriodRequestSchema))],
    submerchant: [
        'submerchant',
        optional(lazy(() => createSubMerchantRequestSchema)),
    ],
    split: [
        'split',
        optional(lazy(() => createSubscriptionSplitRequestSchema)),
    ],
    boleto: [
        'boleto',
        optional(lazy(() => createSubscriptionBoletoRequestSchema)),
    ],
});
//# sourceMappingURL=createSubscriptionRequest.js.map