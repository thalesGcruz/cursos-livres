{"version":3,"sources":["../src/vite_middleware.ts"],"sourcesContent":["/*\n * @adonisjs/vite\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { ViteDevServer } from 'vite'\nimport type { HttpContext } from '@adonisjs/core/http'\nimport type { NextFn } from '@adonisjs/core/types/http'\n\nimport type { Vite } from './vite.js'\n\n/**\n * Since Vite dev server is integrated within the AdonisJS process, this\n * middleware is used to proxy the requests to it.\n *\n * Some of the requests are directly handled by the Vite dev server,\n * like the one for the assets, while others are passed down to the\n * AdonisJS server.\n */\nexport default class ViteMiddleware {\n  #devServer: ViteDevServer\n\n  constructor(protected vite: Vite) {\n    this.#devServer = this.vite.getDevServer()!\n  }\n\n  async handle({ request, response }: HttpContext, next: NextFn) {\n    if (!this.#devServer) return next()\n\n    /**\n     * @adonisjs/cors should handle the CORS instead of Vite\n     */\n    if (this.#devServer.config.server.cors === false) response.relayHeaders()\n\n    /**\n     * Proxy the request to the vite dev server\n     */\n    await new Promise((resolve) => {\n      this.#devServer.middlewares.handle(request.request, response.response, () => {\n        return resolve(next())\n      })\n    })\n  }\n}\n"],"mappings":";AAuBA,IAAqB,iBAArB,MAAoC;AAAA,EAGlC,YAAsB,MAAY;AAAZ;AACpB,SAAK,aAAa,KAAK,KAAK,aAAa;AAAA,EAC3C;AAAA,EAJA;AAAA,EAMA,MAAM,OAAO,EAAE,SAAS,SAAS,GAAgB,MAAc;AAC7D,QAAI,CAAC,KAAK;AAAY,aAAO,KAAK;AAKlC,QAAI,KAAK,WAAW,OAAO,OAAO,SAAS;AAAO,eAAS,aAAa;AAKxE,UAAM,IAAI,QAAQ,CAAC,YAAY;AAC7B,WAAK,WAAW,YAAY,OAAO,QAAQ,SAAS,SAAS,UAAU,MAAM;AAC3E,eAAO,QAAQ,KAAK,CAAC;AAAA,MACvB,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AACF;","names":[]}