"use strict";
/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
exports.__esModule = true;
exports.BalanceOperationsController = void 0;
var tslib_1 = require("tslib");
var getBalanceOperationResponse_1 = require("../models/getBalanceOperationResponse");
var listBalanceOperationResponse_1 = require("../models/listBalanceOperationResponse");
var schema_1 = require("../schema");
var baseController_1 = require("./baseController");
var BalanceOperationsController = /** @class */ (function (_super) {
    tslib_1.__extends(BalanceOperationsController, _super);
    function BalanceOperationsController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @param status
     * @param createdSince
     * @param createdUntil
     * @param recipientId
     * @return Response from the API call
     */
    BalanceOperationsController.prototype.getBalanceOperations = function (status, createdSince, createdUntil, recipientId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var req, mapped;
            return tslib_1.__generator(this, function (_a) {
                req = this.createRequest('GET', '/balance/operations');
                mapped = req.prepareArgs({
                    status: [status, (0, schema_1.optional)((0, schema_1.string)())],
                    createdSince: [createdSince, (0, schema_1.optional)((0, schema_1.string)())],
                    createdUntil: [createdUntil, (0, schema_1.optional)((0, schema_1.string)())],
                    recipientId: [recipientId, (0, schema_1.optional)((0, schema_1.string)())]
                });
                req.query('status', mapped.status);
                req.query('created_since', mapped.createdSince);
                req.query('created_until', mapped.createdUntil);
                req.query('recipient_id', mapped.recipientId);
                req.authenticate([{ httpBasic: true }]);
                return [2 /*return*/, req.callAsJson(listBalanceOperationResponse_1.listBalanceOperationResponseSchema, requestOptions)];
            });
        });
    };
    /**
     * @param id
     * @return Response from the API call
     */
    BalanceOperationsController.prototype.getBalanceOperationById = function (id, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var req, mapped;
            return tslib_1.__generator(this, function (_a) {
                req = this.createRequest('GET');
                mapped = req.prepareArgs({ id: [id, (0, schema_1.bigint)()] });
                req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/balance/operations/", ""], ["/balance/operations/", ""])), mapped.id);
                req.authenticate([{ httpBasic: true }]);
                return [2 /*return*/, req.callAsJson(getBalanceOperationResponse_1.getBalanceOperationResponseSchema, requestOptions)];
            });
        });
    };
    return BalanceOperationsController;
}(baseController_1.BaseController));
exports.BalanceOperationsController = BalanceOperationsController;
var templateObject_1;
//# sourceMappingURL=balanceOperationsController.js.map