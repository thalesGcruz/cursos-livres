/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
import { array, boolean, dict, lazy, nullable, number, object, optional, string, } from '../schema';
import { getChargeResponseSchema, } from './getChargeResponse';
import { getCheckoutPaymentResponseSchema, } from './getCheckoutPaymentResponse';
import { getCustomerResponseSchema, } from './getCustomerResponse';
import { getDeviceResponseSchema, } from './getDeviceResponse';
import { getIntegrationResponseSchema, } from './getIntegrationResponse';
import { getLocationResponseSchema, } from './getLocationResponse';
import { getOrderItemResponseSchema, } from './getOrderItemResponse';
import { getShippingResponseSchema, } from './getShippingResponse';
export const getOrderResponseSchema = object({
    id: ['id', optional(nullable(string()))],
    code: ['code', optional(nullable(string()))],
    amount: ['amount', optional(nullable(number()))],
    currency: ['currency', optional(nullable(string()))],
    closed: ['closed', optional(nullable(boolean()))],
    items: [
        'items',
        optional(nullable(array(lazy(() => getOrderItemResponseSchema)))),
    ],
    customer: [
        'customer',
        optional(nullable(lazy(() => getCustomerResponseSchema))),
    ],
    status: ['status', optional(nullable(string()))],
    createdAt: ['created_at', optional(nullable(string()))],
    updatedAt: ['updated_at', optional(nullable(string()))],
    closedAt: ['closed_at', optional(nullable(string()))],
    charges: [
        'charges',
        optional(nullable(array(lazy(() => getChargeResponseSchema)))),
    ],
    invoiceUrl: ['invoice_url', optional(nullable(string()))],
    shipping: [
        'shipping',
        optional(nullable(lazy(() => getShippingResponseSchema))),
    ],
    metadata: ['metadata', optional(nullable(dict(string())))],
    checkouts: [
        'checkouts',
        optional(nullable(array(lazy(() => getCheckoutPaymentResponseSchema)))),
    ],
    ip: ['ip', optional(nullable(string()))],
    sessionId: ['session_id', optional(nullable(string()))],
    location: [
        'location',
        optional(nullable(lazy(() => getLocationResponseSchema))),
    ],
    device: ['device', optional(nullable(lazy(() => getDeviceResponseSchema)))],
    integration: [
        'integration',
        optional(nullable(lazy(() => getIntegrationResponseSchema))),
    ],
});
//# sourceMappingURL=getOrderResponse.js.map