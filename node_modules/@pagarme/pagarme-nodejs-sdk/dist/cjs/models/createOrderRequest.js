"use strict";
/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
exports.__esModule = true;
exports.createOrderRequestSchema = void 0;
var schema_1 = require("../schema");
var createAntifraudRequest_1 = require("./createAntifraudRequest");
var createCustomerRequest_1 = require("./createCustomerRequest");
var createDeviceRequest_1 = require("./createDeviceRequest");
var createLocationRequest_1 = require("./createLocationRequest");
var createOrderItemRequest_1 = require("./createOrderItemRequest");
var createPaymentRequest_1 = require("./createPaymentRequest");
var createShippingRequest_1 = require("./createShippingRequest");
var createSubMerchantRequest_1 = require("./createSubMerchantRequest");
exports.createOrderRequestSchema = (0, schema_1.object)({
    items: ['items', (0, schema_1.array)((0, schema_1.lazy)(function () { return createOrderItemRequest_1.createOrderItemRequestSchema; }))],
    customer: ['customer', (0, schema_1.lazy)(function () { return createCustomerRequest_1.createCustomerRequestSchema; })],
    payments: ['payments', (0, schema_1.array)((0, schema_1.lazy)(function () { return createPaymentRequest_1.createPaymentRequestSchema; }))],
    code: ['code', (0, schema_1.string)()],
    customerId: ['customer_id', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    shipping: ['shipping', (0, schema_1.optional)((0, schema_1.lazy)(function () { return createShippingRequest_1.createShippingRequestSchema; }))],
    metadata: ['metadata', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.dict)((0, schema_1.string)())))],
    antifraudEnabled: ['antifraud_enabled', (0, schema_1.optional)((0, schema_1.boolean)())],
    ip: ['ip', (0, schema_1.optional)((0, schema_1.string)())],
    sessionId: ['session_id', (0, schema_1.optional)((0, schema_1.string)())],
    location: ['location', (0, schema_1.optional)((0, schema_1.lazy)(function () { return createLocationRequest_1.createLocationRequestSchema; }))],
    device: ['device', (0, schema_1.optional)((0, schema_1.lazy)(function () { return createDeviceRequest_1.createDeviceRequestSchema; }))],
    closed: ['closed', (0, schema_1.boolean)()],
    currency: ['currency', (0, schema_1.optional)((0, schema_1.string)())],
    antifraud: ['antifraud', (0, schema_1.optional)((0, schema_1.lazy)(function () { return createAntifraudRequest_1.createAntifraudRequestSchema; }))],
    submerchant: [
        'submerchant',
        (0, schema_1.optional)((0, schema_1.lazy)(function () { return createSubMerchantRequest_1.createSubMerchantRequestSchema; })),
    ]
});
//# sourceMappingURL=createOrderRequest.js.map