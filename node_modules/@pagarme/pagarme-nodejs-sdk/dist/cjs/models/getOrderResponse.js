"use strict";
/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
exports.__esModule = true;
exports.getOrderResponseSchema = void 0;
var schema_1 = require("../schema");
var getChargeResponse_1 = require("./getChargeResponse");
var getCheckoutPaymentResponse_1 = require("./getCheckoutPaymentResponse");
var getCustomerResponse_1 = require("./getCustomerResponse");
var getDeviceResponse_1 = require("./getDeviceResponse");
var getIntegrationResponse_1 = require("./getIntegrationResponse");
var getLocationResponse_1 = require("./getLocationResponse");
var getOrderItemResponse_1 = require("./getOrderItemResponse");
var getShippingResponse_1 = require("./getShippingResponse");
exports.getOrderResponseSchema = (0, schema_1.object)({
    id: ['id', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    code: ['code', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    amount: ['amount', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
    currency: ['currency', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    closed: ['closed', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
    items: [
        'items',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function () { return getOrderItemResponse_1.getOrderItemResponseSchema; })))),
    ],
    customer: [
        'customer',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getCustomerResponse_1.getCustomerResponseSchema; }))),
    ],
    status: ['status', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    createdAt: ['created_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    updatedAt: ['updated_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    closedAt: ['closed_at', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    charges: [
        'charges',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function () { return getChargeResponse_1.getChargeResponseSchema; })))),
    ],
    invoiceUrl: ['invoice_url', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    shipping: [
        'shipping',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getShippingResponse_1.getShippingResponseSchema; }))),
    ],
    metadata: ['metadata', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.dict)((0, schema_1.string)())))],
    checkouts: [
        'checkouts',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function () { return getCheckoutPaymentResponse_1.getCheckoutPaymentResponseSchema; })))),
    ],
    ip: ['ip', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    sessionId: ['session_id', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    location: [
        'location',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getLocationResponse_1.getLocationResponseSchema; }))),
    ],
    device: ['device', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getDeviceResponse_1.getDeviceResponseSchema; })))],
    integration: [
        'integration',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getIntegrationResponse_1.getIntegrationResponseSchema; }))),
    ]
});
//# sourceMappingURL=getOrderResponse.js.map