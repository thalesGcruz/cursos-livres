"use strict";
/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
exports.__esModule = true;
exports.createSubscriptionRequestSchema = void 0;
var schema_1 = require("../schema");
var createCardRequest_1 = require("./createCardRequest");
var createCustomerRequest_1 = require("./createCustomerRequest");
var createDiscountRequest_1 = require("./createDiscountRequest");
var createIncrementRequest_1 = require("./createIncrementRequest");
var createPeriodRequest_1 = require("./createPeriodRequest");
var createPricingSchemeRequest_1 = require("./createPricingSchemeRequest");
var createSetupRequest_1 = require("./createSetupRequest");
var createShippingRequest_1 = require("./createShippingRequest");
var createSubMerchantRequest_1 = require("./createSubMerchantRequest");
var createSubscriptionBoletoRequest_1 = require("./createSubscriptionBoletoRequest");
var createSubscriptionItemRequest_1 = require("./createSubscriptionItemRequest");
var createSubscriptionSplitRequest_1 = require("./createSubscriptionSplitRequest");
exports.createSubscriptionRequestSchema = (0, schema_1.object)({
    customer: ['customer', (0, schema_1.lazy)(function () { return createCustomerRequest_1.createCustomerRequestSchema; })],
    card: ['card', (0, schema_1.lazy)(function () { return createCardRequest_1.createCardRequestSchema; })],
    code: ['code', (0, schema_1.string)()],
    paymentMethod: ['payment_method', (0, schema_1.string)()],
    billingType: ['billing_type', (0, schema_1.string)()],
    statementDescriptor: ['statement_descriptor', (0, schema_1.string)()],
    description: ['description', (0, schema_1.string)()],
    currency: ['currency', (0, schema_1.string)()],
    interval: ['interval', (0, schema_1.string)()],
    intervalCount: ['interval_count', (0, schema_1.number)()],
    pricingScheme: [
        'pricing_scheme',
        (0, schema_1.lazy)(function () { return createPricingSchemeRequest_1.createPricingSchemeRequestSchema; }),
    ],
    items: ['items', (0, schema_1.array)((0, schema_1.lazy)(function () { return createSubscriptionItemRequest_1.createSubscriptionItemRequestSchema; }))],
    shipping: ['shipping', (0, schema_1.lazy)(function () { return createShippingRequest_1.createShippingRequestSchema; })],
    discounts: ['discounts', (0, schema_1.array)((0, schema_1.lazy)(function () { return createDiscountRequest_1.createDiscountRequestSchema; }))],
    metadata: ['metadata', (0, schema_1.dict)((0, schema_1.string)())],
    setup: ['setup', (0, schema_1.optional)((0, schema_1.lazy)(function () { return createSetupRequest_1.createSetupRequestSchema; }))],
    planId: ['plan_id', (0, schema_1.optional)((0, schema_1.string)())],
    customerId: ['customer_id', (0, schema_1.optional)((0, schema_1.string)())],
    cardId: ['card_id', (0, schema_1.optional)((0, schema_1.string)())],
    billingDay: ['billing_day', (0, schema_1.optional)((0, schema_1.number)())],
    installments: ['installments', (0, schema_1.optional)((0, schema_1.number)())],
    startAt: ['start_at', (0, schema_1.optional)((0, schema_1.string)())],
    minimumPrice: ['minimum_price', (0, schema_1.optional)((0, schema_1.number)())],
    cycles: ['cycles', (0, schema_1.optional)((0, schema_1.number)())],
    cardToken: ['card_token', (0, schema_1.optional)((0, schema_1.string)())],
    gatewayAffiliationId: ['gateway_affiliation_id', (0, schema_1.optional)((0, schema_1.string)())],
    quantity: ['quantity', (0, schema_1.optional)((0, schema_1.number)())],
    boletoDueDays: ['boleto_due_days', (0, schema_1.optional)((0, schema_1.number)())],
    increments: ['increments', (0, schema_1.array)((0, schema_1.lazy)(function () { return createIncrementRequest_1.createIncrementRequestSchema; }))],
    period: ['period', (0, schema_1.optional)((0, schema_1.lazy)(function () { return createPeriodRequest_1.createPeriodRequestSchema; }))],
    submerchant: [
        'submerchant',
        (0, schema_1.optional)((0, schema_1.lazy)(function () { return createSubMerchantRequest_1.createSubMerchantRequestSchema; })),
    ],
    split: [
        'split',
        (0, schema_1.optional)((0, schema_1.lazy)(function () { return createSubscriptionSplitRequest_1.createSubscriptionSplitRequestSchema; })),
    ],
    boleto: [
        'boleto',
        (0, schema_1.optional)((0, schema_1.lazy)(function () { return createSubscriptionBoletoRequest_1.createSubscriptionBoletoRequestSchema; })),
    ]
});
//# sourceMappingURL=createSubscriptionRequest.js.map