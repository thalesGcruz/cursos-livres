"use strict";
/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
exports.__esModule = true;
exports.getRegisterInformationResponseSchema = void 0;
var schema_1 = require("../schema");
var getManagingPartnerResponse_1 = require("./getManagingPartnerResponse");
var getPhoneNumberResponse_1 = require("./getPhoneNumberResponse");
var getRegisterInformationAddressResponse_1 = require("./getRegisterInformationAddressResponse");
exports.getRegisterInformationResponseSchema = (0, schema_1.object)({
    email: ['email', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    document: ['document', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    type: ['type', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    siteUrl: ['site_url', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    phoneNumbers: [
        'phone_numbers',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function () { return getPhoneNumberResponse_1.getPhoneNumberResponseSchema; })))),
    ],
    name: ['name', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    motherName: ['mother_name', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    birthdate: ['birthdate', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    monthlyIncome: ['monthly_income', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    professionalOccupation: [
        'professional_occupation',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)())),
    ],
    address: [
        'address',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getRegisterInformationAddressResponse_1.getRegisterInformationAddressResponseSchema; }))),
    ],
    companyName: ['company_name', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    tradingName: ['trading_name', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    annualRevenue: ['annual_revenue', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    corporationType: ['corporation_type', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    foundingDate: ['founding_date', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    cnae: ['cnae', (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
    mainAddress: [
        'main_address',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.lazy)(function () { return getRegisterInformationAddressResponse_1.getRegisterInformationAddressResponseSchema; }))),
    ],
    managingPartners: [
        'managing_partners',
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function () { return getManagingPartnerResponse_1.getManagingPartnerResponseSchema; })))),
    ]
});
//# sourceMappingURL=getRegisterInformationResponse.js.map