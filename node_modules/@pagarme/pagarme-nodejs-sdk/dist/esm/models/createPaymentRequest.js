/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
import { array, dict, lazy, number, object, optional, string, } from '../schema';
import { createBankTransferPaymentRequestSchema, } from './createBankTransferPaymentRequest';
import { createBoletoPaymentRequestSchema, } from './createBoletoPaymentRequest';
import { createCashPaymentRequestSchema, } from './createCashPaymentRequest';
import { createCheckoutPaymentRequestSchema, } from './createCheckoutPaymentRequest';
import { createCreditCardPaymentRequestSchema, } from './createCreditCardPaymentRequest';
import { createCustomerRequestSchema, } from './createCustomerRequest';
import { createDebitCardPaymentRequestSchema, } from './createDebitCardPaymentRequest';
import { createPixPaymentRequestSchema, } from './createPixPaymentRequest';
import { createPrivateLabelPaymentRequestSchema, } from './createPrivateLabelPaymentRequest';
import { createSplitRequestSchema, } from './createSplitRequest';
import { createVoucherPaymentRequestSchema, } from './createVoucherPaymentRequest';
export const createPaymentRequestSchema = object({
    paymentMethod: ['payment_method', string()],
    creditCard: [
        'credit_card',
        optional(lazy(() => createCreditCardPaymentRequestSchema)),
    ],
    debitCard: [
        'debit_card',
        optional(lazy(() => createDebitCardPaymentRequestSchema)),
    ],
    boleto: ['boleto', optional(lazy(() => createBoletoPaymentRequestSchema))],
    currency: ['currency', optional(string())],
    voucher: ['voucher', optional(lazy(() => createVoucherPaymentRequestSchema))],
    split: ['split', optional(array(lazy(() => createSplitRequestSchema)))],
    bankTransfer: [
        'bank_transfer',
        optional(lazy(() => createBankTransferPaymentRequestSchema)),
    ],
    gatewayAffiliationId: ['gateway_affiliation_id', optional(string())],
    amount: ['amount', optional(number())],
    checkout: [
        'checkout',
        optional(lazy(() => createCheckoutPaymentRequestSchema)),
    ],
    customerId: ['customer_id', optional(string())],
    customer: ['customer', optional(lazy(() => createCustomerRequestSchema))],
    metadata: ['metadata', optional(dict(string()))],
    cash: ['cash', optional(lazy(() => createCashPaymentRequestSchema))],
    privateLabel: [
        'private_label',
        optional(lazy(() => createPrivateLabelPaymentRequestSchema)),
    ],
    pix: ['pix', optional(lazy(() => createPixPaymentRequestSchema))],
});
//# sourceMappingURL=createPaymentRequest.js.map